{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"deco",
				"decode"
			],
			[
				"strea",
				"stream_obj\tforstmt"
			],
			[
				"steam",
				"stream_obj\tforstmt"
			],
			[
				"stre",
				"stream_obj_list\tparam"
			],
			[
				"get",
				"getobj"
			],
			[
				"doc",
				"doc\tparam"
			],
			[
				"PDF",
				"PDFStream\tclass"
			],
			[
				"p",
				"pdftypes\tmodule"
			],
			[
				"PDFPa",
				"pdfparser\tmodule"
			],
			[
				"pdf",
				"pdfdocument\tmodule"
			],
			[
				"inp",
				"input_file\tstatement"
			],
			[
				"out",
				"output_file_name\tstatement"
			],
			[
				"fotm",
				"format\tfunction"
			],
			[
				"json",
				"json_string\tstatement"
			],
			[
				"wr",
				"write\tfunction"
			],
			[
				"for",
				"format\tfunction"
			],
			[
				"decode",
				"decoded_obj_dict"
			],
			[
				"obta",
				"obtain_bytes_sequence\tfunction"
			],
			[
				"byte",
				"bytes_sequence"
			],
			[
				"input",
				"input_file"
			],
			[
				"code",
				"codec\tparam"
			],
			[
				"parse",
				"parse_input_args\tfunction"
			],
			[
				"end",
				"end_stream_pos\tstatement"
			],
			[
				"bytes",
				"bytes_sequence\tstatement"
			],
			[
				"obje",
				"object_counter\tstatement"
			],
			[
				"en",
				"end_stream_pos\tstatement"
			],
			[
				"star",
				"start_stream_pos\tstatement"
			],
			[
				"read",
				"readline\tfunction"
			],
			[
				"pd",
				"pdb\tmodule"
			],
			[
				"pa",
				"parse_args\tfunction"
			],
			[
				"OUT",
				"__OUTPUT_FILE__"
			],
			[
				"Arg",
				"ArgumentParser\tclass"
			],
			[
				"de",
				"decompressobj\tfunction"
			],
			[
				"max",
				"max_sum\tstatement"
			],
			[
				"sum",
				"sum_symbol\tstatement"
			],
			[
				"encod",
				"encoding"
			],
			[
				"print",
				"print_exc\tfunction"
			],
			[
				"wih",
				"with_traceback\tfunction"
			],
			[
				"path",
				"pathsep\tinstance"
			],
			[
				"op",
				"op_file\tstatement"
			],
			[
				"file",
				"file_name\tstatement"
			],
			[
				"pah",
				"pathsep\tinstance"
			],
			[
				"lis",
				"list_files\tstatement"
			],
			[
				"in",
				"input_files\tstatement"
			],
			[
				"parsed",
				"parsed_args\tstatement"
			],
			[
				"ls",
				"listdir\tfunction"
			],
			[
				"is",
				"isdir\tfunction"
			],
			[
				"with",
				"with_traceback\tfunction"
			],
			[
				"pars",
				"parsed_args\tstatement"
			],
			[
				"inpt",
				"input_files"
			],
			[
				"Argume",
				"ArgumentError\tclass"
			],
			[
				"GET",
				"GetoptError\tclass"
			],
			[
				"ex",
				"exit\tinstance"
			],
			[
				"sub",
				"subprocess\tmodule"
			],
			[
				"int",
				"interpreter\tstatement"
			],
			[
				"PDFInt",
				"PDFPageInterpreter\tclass"
			],
			[
				"res",
				"resource_manager\tstatement"
			],
			[
				"P",
				"PDFPage\tclass"
			],
			[
				"pdfp",
				"pdfpage\tmodule"
			],
			[
				"PDFIn",
				"PDFPageInterpreter\tclass"
			],
			[
				"pdfpa",
				"pdfparser\tmodule"
			],
			[
				"PD",
				"PDFStream\tclass"
			],
			[
				"dic",
				"dict_bac\tstatement"
			],
			[
				"proces",
				"process_item_cache\tfunction"
			],
			[
				"In",
				"INPUT_FILE_PATH\tstatement"
			],
			[
				"str",
				"strip"
			],
			[
				"sr",
				"source\tTag"
			],
			[
				"Strig",
				"string\tkeyword"
			],
			[
				"re",
				"request\tparam"
			],
			[
				"open",
				"open_session\tfunction"
			],
			[
				"local",
				"localtime\tfunction"
			],
			[
				"s",
				"strptime\tfunction"
			],
			[
				"assi",
				"assigned_to\tstatement"
			],
			[
				"se",
				"self\tparam"
			],
			[
				"tas",
				"task_setter\tstatement"
			],
			[
				"task",
				"taskId\tstatement"
			],
			[
				"task_di",
				"tasks_dict\tstatement"
			],
			[
				"random",
				"random\tstatement"
			],
			[
				"fo",
				"form"
			],
			[
				"get_taks",
				"get_tasks_for"
			],
			[
				"rou",
				"route"
			],
			[
				"empl",
				"employees\tglobalstmt"
			],
			[
				"rep",
				"reportees\tstatement"
			],
			[
				"sta",
				"status\tstatement"
			],
			[
				"repr",
				"get_reportees"
			],
			[
				"tim",
				"time\tclass"
			],
			[
				"date",
				"datetime\tmodule"
			],
			[
				"me",
				"method"
			],
			[
				"method",
				"methods"
			],
			[
				"mana",
				"manager_1\tstatement"
			],
			[
				"man",
				"manager\tparam"
			],
			[
				"python",
				"python"
			],
			[
				"iscomple",
				"is_complete_employee"
			],
			[
				"st",
				"start\tstatement"
			],
			[
				"permut",
				"permuted_strings"
			],
			[
				"od",
				"odd_char\tparam"
			],
			[
				"permu",
				"permute_fhalf"
			],
			[
				"fir",
				"first_half\tparam"
			],
			[
				"odd",
				"odd_char"
			],
			[
				"firs",
				"first_half"
			],
			[
				"count",
				"count_odd\tstatement"
			],
			[
				"dum",
				"dumps\tfunction"
			],
			[
				"la",
				"layer_nbr"
			],
			[
				"rota",
				"rotate_layer"
			],
			[
				"lcm",
				"lcm_a"
			],
			[
				"lc",
				"lcm_a"
			],
			[
				"gc",
				"gcd_b"
			],
			[
				"gcd",
				"gcd_list"
			],
			[
				"cout",
				"count_false\tstatement"
			],
			[
				"true",
				"True"
			],
			[
				"mak",
				"mark_all"
			],
			[
				"e",
				"element\tstatement"
			],
			[
				"new",
				"new_ps\tstatement"
			],
			[
				"set",
				"set_\tparam"
			],
			[
				"gene",
				"generate_permutations"
			],
			[
				"zero",
				"zero_matrix\tfunction"
			],
			[
				"ze",
				"zero_list"
			],
			[
				"a",
				"append\tfunction"
			],
			[
				"__nam",
				"__name__\tinstance"
			],
			[
				"compre",
				"compress_string\tfunction"
			],
			[
				"com",
				"compression_stack\tstatement"
			],
			[
				"compressi",
				"compression_stack\tstatement"
			],
			[
				"check",
				"check_edits\tfunction"
			],
			[
				"item",
				"items\tfunction"
			],
			[
				"ac",
				"actual_len\tstatement"
			],
			[
				"it",
				"items\tfunction"
			],
			[
				"stirn",
				"string_list\tstatement"
			],
			[
				"stin",
				"string_list\tstatement"
			]
		]
	},
	"buffers":
	[
		{
			"file": "process_pdf.py",
			"settings":
			{
				"buffer_size": 4814,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "process_pdf_rough.py",
			"settings":
			{
				"buffer_size": 9248,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "process_pdf_rough2.py",
			"settings":
			{
				"buffer_size": 2220,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "obscalculi_testing_pdf_conv.pdf",
			"settings":
			{
				"buffer_size": 257769,
				"encoding": "Western (Windows 1252)",
				"line_ending": "CR"
			}
		},
		{
			"contents": "# pdfdocument.py\nimport re\nimport struct\nimport logging\n\nimport six # Python 2+3 compatibility\ntry:\n    import hashlib as md5\nexcept ImportError:\n    import md5\ntry:\n    from Crypto.Cipher import ARC4\n    from Crypto.Cipher import AES\n    from Crypto.Hash import SHA256\nexcept ImportError:\n    AES = SHA256 = None\n    from . import arcfour as ARC4\nfrom .psparser import PSEOF\nfrom .psparser import literal_name\nfrom .psparser import LIT\nfrom .psparser import KWD\nfrom .settings import STRICT\nfrom .pdftypes import PDFException\nfrom .pdftypes import PDFTypeError\nfrom .pdftypes import PDFStream\nfrom .pdftypes import PDFObjectNotFound\nfrom .pdftypes import decipher_all\nfrom .pdftypes import int_value\nfrom .pdftypes import str_value\nfrom .pdftypes import list_value\nfrom .pdftypes import dict_value\nfrom .pdftypes import stream_value\nfrom .pdfparser import PDFSyntaxError\nfrom .pdfparser import PDFStreamParser\nfrom .utils import choplist\nfrom .utils import nunpack\nfrom .utils import decode_text\n\n\n##  Exceptions\n##\nclass PDFNoValidXRef(PDFSyntaxError):\n    pass\n\nclass PDFNoOutlines(PDFException):\n    pass\n\nclass PDFDestinationNotFound(PDFException):\n    pass\n\nclass PDFEncryptionError(PDFException):\n    pass\n\nclass PDFPasswordIncorrect(PDFEncryptionError):\n    pass\n\nclass PDFTextExtractionNotAllowed(PDFEncryptionError):\n    pass\n\n# some predefined literals and keywords.\nLITERAL_OBJSTM = LIT('ObjStm')\nLITERAL_XREF = LIT('XRef')\nLITERAL_CATALOG = LIT('Catalog')\n\n\n##  XRefs\n##\nclass PDFBaseXRef(object):\n\n    def get_trailer(self):\n        raise NotImplementedError\n\n    def get_objids(self):\n        return []\n\n    # Must return\n    #     (strmid, index, genno)\n    #  or (None, pos, genno)\n    def get_pos(self, objid):\n        raise KeyError(objid)\n\n\n##  PDFXRef\n##\nclass PDFXRef(PDFBaseXRef):\n\n    def __init__(self):\n        self.offsets = {}\n        self.trailer = {}\n        return\n\n    def __repr__(self):\n        return '<PDFXRef: offsets=%r>' % (self.offsets.keys())\n\n    def load(self, parser):\n        while True:\n            try:\n                (pos, line) = parser.nextline()\n                if not line.strip():\n                    continue\n            except PSEOF:\n                raise PDFNoValidXRef('Unexpected EOF - file corrupted?')\n            if not line:\n                raise PDFNoValidXRef('Premature eof: %r' % parser)\n            if line.startswith(b'trailer'):\n                parser.seek(pos)\n                break\n            f = line.strip().split(b' ')\n            if len(f) != 2:\n                raise PDFNoValidXRef('Trailer not found: %r: line=%r' % (parser, line))\n            try:\n                if six.PY2:\n                    (start, nobjs) = map(long, f)\n                else:\n                    (start, nobjs) = map(int, f)\n            except ValueError:\n                raise PDFNoValidXRef('Invalid line: %r: line=%r' % (parser, line))\n            for objid in range(start, start+nobjs):\n                try:\n                    (_, line) = parser.nextline()\n                except PSEOF:\n                    raise PDFNoValidXRef('Unexpected EOF - file corrupted?')\n                f = line.strip().split(b' ')\n                if len(f) != 3:\n                    raise PDFNoValidXRef('Invalid XRef format: %r, line=%r' % (parser, line))\n                (pos, genno, use) = f\n                if use != b'n':\n                    continue\n                self.offsets[objid] = (None, long(pos) if six.PY2 else int(pos), int(genno))\n        logging.info('xref objects: %r', self.offsets)\n        self.load_trailer(parser)\n        return\n\n    def load_trailer(self, parser):\n        try:\n            (_, kwd) = parser.nexttoken()\n            assert kwd is KWD(b'trailer')\n            (_, dic) = parser.nextobject()\n        except PSEOF:\n            x = parser.pop(1)\n            if not x:\n                raise PDFNoValidXRef('Unexpected EOF - file corrupted')\n            (_, dic) = x[0]\n        self.trailer.update(dict_value(dic))\n        logging.debug('trailer=%r', self.trailer)\n        return\n\n    def get_trailer(self):\n        return self.trailer\n\n    def get_objids(self):\n        return six.iterkeys(self.offsets)\n\n    def get_pos(self, objid):\n        try:\n            return self.offsets[objid]\n        except KeyError:\n            raise\n\n\n##  PDFXRefFallback\n##\nclass PDFXRefFallback(PDFXRef):\n\n    def __repr__(self):\n        return '<PDFXRefFallback: offsets=%r>' % (self.offsets.keys())\n\n    PDFOBJ_CUE = re.compile(r'^(\\d+)\\s+(\\d+)\\s+obj\\b')\n\n    def load(self, parser):\n        parser.seek(0)\n        while 1:\n            try:\n                (pos, line) = parser.nextline()\n            except PSEOF:\n                break\n            if line.startswith(b'trailer'):\n                parser.seek(pos)\n                self.load_trailer(parser)\n                logging.info('trailer: %r', self.trailer)\n                break\n            if six.PY3:\n                line=line.decode('latin-1') #default pdf encoding\n            m = self.PDFOBJ_CUE.match(line)\n            if not m:\n                continue\n            (objid, genno) = m.groups()\n            objid = int(objid)\n            genno = int(genno)\n            self.offsets[objid] = (None, pos, genno)\n            # expand ObjStm.\n            parser.seek(pos)\n            (_, obj) = parser.nextobject()\n            if isinstance(obj, PDFStream) and obj.get('Type') is LITERAL_OBJSTM:\n                stream = stream_value(obj)\n                try:\n                    n = stream['N']\n                except KeyError:\n                    if STRICT:\n                        raise PDFSyntaxError('N is not defined: %r' % stream)\n                    n = 0\n                parser1 = PDFStreamParser(stream.get_data())\n                objs = []\n                try:\n                    while 1:\n                        (_, obj) = parser1.nextobject()\n                        objs.append(obj)\n                except PSEOF:\n                    pass\n                n = min(n, len(objs)//2)\n                for index in range(n):\n                    objid1 = objs[index*2]\n                    self.offsets[objid1] = (objid, index, 0)\n        return\n\n\n##  PDFXRefStream\n##\nclass PDFXRefStream(PDFBaseXRef):\n\n    def __init__(self):\n        self.data = None\n        self.entlen = None\n        self.fl1 = self.fl2 = self.fl3 = None\n        self.ranges = []\n        return\n\n    def __repr__(self):\n        return '<PDFXRefStream: ranges=%r>' % (self.ranges)\n\n    def load(self, parser):\n        (_, objid) = parser.nexttoken()  # ignored\n        (_, genno) = parser.nexttoken()  # ignored\n        (_, kwd) = parser.nexttoken()\n        (_, stream) = parser.nextobject()\n        if not isinstance(stream, PDFStream) or stream['Type'] is not LITERAL_XREF:\n            raise PDFNoValidXRef('Invalid PDF stream spec.')\n        size = stream['Size']\n        index_array = stream.get('Index', (0, size))\n        if len(index_array) % 2 != 0:\n            raise PDFSyntaxError('Invalid index number')\n        self.ranges.extend(choplist(2, index_array))\n        (self.fl1, self.fl2, self.fl3) = stream['W']\n        self.data = stream.get_data()\n        self.entlen = self.fl1+self.fl2+self.fl3\n        self.trailer = stream.attrs\n        logging.info('xref stream: objid=%s, fields=%d,%d,%d',\n                     ', '.join(map(repr, self.ranges)),\n                      self.fl1, self.fl2, self.fl3)\n        return\n\n    def get_trailer(self):\n        return self.trailer\n\n    def get_objids(self):\n        for (start, nobjs) in self.ranges:\n            for i in range(nobjs):\n                offset = self.entlen * i\n                ent = self.data[offset:offset+self.entlen]\n                f1 = nunpack(ent[:self.fl1], 1)\n                if f1 == 1 or f1 == 2:\n                    yield start+i\n        return\n\n    def get_pos(self, objid):\n        index = 0\n        for (start, nobjs) in self.ranges:\n            if start <= objid and objid < start+nobjs:\n                index += objid - start\n                break\n            else:\n                index += nobjs\n        else:\n            raise KeyError(objid)\n        offset = self.entlen * index\n        ent = self.data[offset:offset+self.entlen]\n        f1 = nunpack(ent[:self.fl1], 1)\n        f2 = nunpack(ent[self.fl1:self.fl1+self.fl2])\n        f3 = nunpack(ent[self.fl1+self.fl2:])\n        if f1 == 1:\n            return (None, f2, f3)\n        elif f1 == 2:\n            return (f2, f3, 0)\n        else:\n            # this is a free object\n            raise KeyError(objid)\n\n\n##  PDFSecurityHandler\n##\nclass PDFStandardSecurityHandler(object):\n\n    PASSWORD_PADDING = (b'(\\xbfN^Nu\\x8aAd\\x00NV\\xff\\xfa\\x01\\x08'\n                        b'..\\x00\\xb6\\xd0h>\\x80/\\x0c\\xa9\\xfedSiz')\n    supported_revisions = (2, 3)\n\n    def __init__(self, docid, param, password=''):\n        self.docid = docid\n        self.param = param\n        self.password = password\n        self.init()\n        return\n\n    def init(self):\n        self.init_params()\n        if self.r not in self.supported_revisions:\n            raise PDFEncryptionError('Unsupported revision: param=%r' % self.param)\n        self.init_key()\n        return\n\n    def init_params(self):\n        self.v = int_value(self.param.get('V', 0))\n        self.r = int_value(self.param['R'])\n        self.p = int_value(self.param['P'])\n        self.o = str_value(self.param['O'])\n        self.u = str_value(self.param['U'])\n        self.length = int_value(self.param.get('Length', 40))\n        return\n\n    def init_key(self):\n        self.key = self.authenticate(self.password)\n        if self.key is None:\n            raise PDFPasswordIncorrect\n        return\n\n    def is_printable(self):\n        return bool(self.p & 4)\n\n    def is_modifiable(self):\n        return bool(self.p & 8)\n\n    def is_extractable(self):\n        return bool(self.p & 16)\n\n    def compute_u(self, key):\n        if self.r == 2:\n            # Algorithm 3.4\n            return ARC4.new(key).encrypt(self.PASSWORD_PADDING)  # 2\n        else:\n            # Algorithm 3.5\n            hash = md5.md5(self.PASSWORD_PADDING)  # 2\n            hash.update(self.docid[0])  # 3\n            result = ARC4.new(key).encrypt(hash.digest())  # 4\n            for i in range(1, 20):  # 5\n                k = b''.join(six.int2byte(c ^ i) for c in six.iterbytes(key))\n                result = ARC4.new(k).encrypt(result)\n            result += result  # 6\n            return result\n\n    def compute_encryption_key(self, password):\n        # Algorithm 3.2\n        password = (password + self.PASSWORD_PADDING)[:32]  # 1\n        hash = md5.md5(password)  # 2\n        hash.update(self.o)  # 3\n        hash.update(struct.pack('<l', self.p))  # 4\n        hash.update(self.docid[0])  # 5\n        if self.r >= 4:\n            if not self.encrypt_metadata:\n                hash.update(b'\\xff\\xff\\xff\\xff')\n        result = hash.digest()\n        n = 5\n        if self.r >= 3:\n            n = self.length // 8\n            for _ in range(50):\n                result = md5.md5(result[:n]).digest()\n        return result[:n]\n\n    def authenticate(self, password):\n        password = password.encode(\"latin1\")\n        key = self.authenticate_user_password(password)\n        if key is None:\n            key = self.authenticate_owner_password(password)\n        return key\n\n    def authenticate_user_password(self, password):\n        key = self.compute_encryption_key(password)\n        if self.verify_encryption_key(key):\n            return key\n        else:\n            return None\n\n    def verify_encryption_key(self, key):\n        # Algorithm 3.6\n        u = self.compute_u(key)\n        if self.r == 2:\n            return u == self.u\n        return u[:16] == self.u[:16]\n\n    def authenticate_owner_password(self, password):\n        # Algorithm 3.7\n        password = (password + self.PASSWORD_PADDING)[:32]\n        hash = md5.md5(password)\n        if self.r >= 3:\n            for _ in range(50):\n                hash = md5.md5(hash.digest())\n        n = 5\n        if self.r >= 3:\n            n = self.length // 8\n        key = hash.digest()[:n]\n        if self.r == 2:\n            user_password = ARC4.new(key).decrypt(self.o)\n        else:\n            user_password = self.o\n            for i in range(19, -1, -1):\n                k = b''.join(six.int2byte(c ^ i) for c in six.iterbytes(key))\n                user_password = ARC4.new(k).decrypt(user_password)\n        return self.authenticate_user_password(user_password)\n\n    def decrypt(self, objid, genno, data, attrs=None):\n        return self.decrypt_rc4(objid, genno, data)\n\n    def decrypt_rc4(self, objid, genno, data):\n        key = self.key + struct.pack('<L', objid)[:3] + struct.pack('<L', genno)[:2]\n        hash = md5.md5(key)\n        key = hash.digest()[:min(len(key), 16)]\n        return ARC4.new(key).decrypt(data)\n\n\nclass PDFStandardSecurityHandlerV4(PDFStandardSecurityHandler):\n\n    supported_revisions = (4,)\n\n    def init_params(self):\n        super(PDFStandardSecurityHandlerV4, self).init_params()\n        self.length = 128\n        self.cf = dict_value(self.param.get('CF'))\n        self.stmf = literal_name(self.param['StmF'])\n        self.strf = literal_name(self.param['StrF'])\n        self.encrypt_metadata = bool(self.param.get('EncryptMetadata', True))\n        if self.stmf != self.strf:\n            raise PDFEncryptionError('Unsupported crypt filter: param=%r' % self.param)\n        self.cfm = {}\n        for k, v in self.cf.items():\n            f = self.get_cfm(literal_name(v['CFM']))\n            if f is None:\n                raise PDFEncryptionError('Unknown crypt filter method: param=%r' % self.param)\n            self.cfm[k] = f\n        self.cfm['Identity'] = self.decrypt_identity\n        if self.strf not in self.cfm:\n            raise PDFEncryptionError('Undefined crypt filter: param=%r' % self.param)\n        return\n\n    def get_cfm(self, name):\n        if name == 'V2':\n            return self.decrypt_rc4\n        elif name == 'AESV2':\n            return self.decrypt_aes128\n        else:\n            return None\n\n    def decrypt(self, objid, genno, data, attrs=None, name=None):\n        if not self.encrypt_metadata and attrs is not None:\n            t = attrs.get('Type')\n            if t is not None and literal_name(t) == 'Metadata':\n                return data\n        if name is None:\n            name = self.strf\n        return self.cfm[name](objid, genno, data)\n\n    def decrypt_identity(self, objid, genno, data):\n        return data\n\n    def decrypt_aes128(self, objid, genno, data):\n        key = self.key + struct.pack('<L', objid)[:3] + struct.pack('<L', genno)[:2] + b'sAlT'\n        hash = md5.md5(key)\n        key = hash.digest()[:min(len(key), 16)]\n        return AES.new(key, mode=AES.MODE_CBC, IV=data[:16]).decrypt(data[16:])\n\n\nclass PDFStandardSecurityHandlerV5(PDFStandardSecurityHandlerV4):\n\n    supported_revisions = (5,)\n\n    def init_params(self):\n        super(PDFStandardSecurityHandlerV5, self).init_params()\n        self.length = 256\n        self.oe = str_value(self.param['OE'])\n        self.ue = str_value(self.param['UE'])\n        self.o_hash = self.o[:32]\n        self.o_validation_salt = self.o[32:40]\n        self.o_key_salt = self.o[40:]\n        self.u_hash = self.u[:32]\n        self.u_validation_salt = self.u[32:40]\n        self.u_key_salt = self.u[40:]\n        return\n\n    def get_cfm(self, name):\n        if name == 'AESV3':\n            return self.decrypt_aes256\n        else:\n            return None\n\n    def authenticate(self, password):\n        password = password.encode('utf-8')[:127]\n        hash = SHA256.new(password)\n        hash.update(self.o_validation_salt)\n        hash.update(self.u)\n        if hash.digest() == self.o_hash:\n            hash = SHA256.new(password)\n            hash.update(self.o_key_salt)\n            hash.update(self.u)\n            return AES.new(hash.digest(), mode=AES.MODE_CBC, IV=b'\\x00' * 16).decrypt(self.oe)\n        hash = SHA256.new(password)\n        hash.update(self.u_validation_salt)\n        if hash.digest() == self.u_hash:\n            hash = SHA256.new(password)\n            hash.update(self.u_key_salt)\n            return AES.new(hash.digest(), mode=AES.MODE_CBC, IV=b'\\x00' * 16).decrypt(self.ue)\n        return None\n\n    def decrypt_aes256(self, objid, genno, data):\n        return AES.new(self.key, mode=AES.MODE_CBC, IV=data[:16]).decrypt(data[16:])\n\n\n##  PDFDocument\n##\nclass PDFDocument(object):\n\n    \"\"\"PDFDocument object represents a PDF document.\n\n    Since a PDF file can be very big, normally it is not loaded at\n    once. So PDF document has to cooperate with a PDF parser in order to\n    dynamically import the data as processing goes.\n\n    Typical usage:\n      doc = PDFDocument(parser, password)\n      obj = doc.getobj(objid)\n\n    \"\"\"\n\n    security_handler_registry = {\n        1: PDFStandardSecurityHandler,\n        2: PDFStandardSecurityHandler,\n    }\n    if AES is not None:\n        security_handler_registry[4] = PDFStandardSecurityHandlerV4\n        if SHA256 is not None:\n            security_handler_registry[5] = PDFStandardSecurityHandlerV5\n\n    def __init__(self, parser, password='', caching=True, fallback=True):\n        \"Set the document to use a given PDFParser object.\"\n        self.caching = caching\n        self.xrefs = []\n        self.info = []\n        self.catalog = None\n        self.encryption = None\n        self.decipher = None\n        self._parser = None\n        self._cached_objs = {}\n        self._parsed_objs = {}\n        self._parser = parser\n        self._parser.set_document(self)\n        self.is_printable = self.is_modifiable = self.is_extractable = True\n        # Retrieve the information of each header that was appended\n        # (maybe multiple times) at the end of the document.\n        try:\n            pos = self.find_xref(parser)\n            self.read_xref_from(parser, pos, self.xrefs)\n        except PDFNoValidXRef:\n            pass # fallback = True\n        if fallback:\n            parser.fallback = True\n            xref = PDFXRefFallback()\n            xref.load(parser)\n            self.xrefs.append(xref)\n        for xref in self.xrefs:\n            trailer = xref.get_trailer()\n            if not trailer:\n                continue\n            # If there's an encryption info, remember it.\n            if 'Encrypt' in trailer:\n                #assert not self.encryption\n                self.encryption = (list_value(trailer['ID']),\n                                   dict_value(trailer['Encrypt']))\n                self._initialize_password(password)\n            if 'Info' in trailer:\n                self.info.append(dict_value(trailer['Info']))\n            if 'Root' in trailer:\n                # Every PDF file must have exactly one /Root dictionary.\n                self.catalog = dict_value(trailer['Root'])\n                break\n        else:\n            raise PDFSyntaxError('No /Root object! - Is this really a PDF?')\n        if self.catalog.get('Type') is not LITERAL_CATALOG:\n            if STRICT:\n                raise PDFSyntaxError('Catalog not found!')\n        return\n\n    # _initialize_password(password=b'')\n    #   Perform the initialization with a given password.\n    def _initialize_password(self, password=''):\n        (docid, param) = self.encryption\n        if literal_name(param.get('Filter')) != 'Standard':\n            raise PDFEncryptionError('Unknown filter: param=%r' % param)\n        v = int_value(param.get('V', 0))\n        factory = self.security_handler_registry.get(v)\n        if factory is None:\n            raise PDFEncryptionError('Unknown algorithm: param=%r' % param)\n        handler = factory(docid, param, password)\n        self.decipher = handler.decrypt\n        self.is_printable = handler.is_printable()\n        self.is_modifiable = handler.is_modifiable()\n        self.is_extractable = handler.is_extractable()\n        self._parser.fallback = False # need to read streams with exact length\n        return\n\n    def _getobj_objstm(self, stream, index, objid):\n        if stream.objid in self._parsed_objs:\n            (objs, n) = self._parsed_objs[stream.objid]\n        else:\n            (objs, n) = self._get_objects(stream)\n            if self.caching:\n                self._parsed_objs[stream.objid] = (objs, n)\n        i = n*2+index\n        try:\n            obj = objs[i]\n        except IndexError:\n            raise PDFSyntaxError('index too big: %r' % index)\n        return obj\n\n    def _get_objects(self, stream):\n        if stream.get('Type') is not LITERAL_OBJSTM:\n            if STRICT:\n                raise PDFSyntaxError('Not a stream object: %r' % stream)\n        try:\n            n = stream['N']\n        except KeyError:\n            if STRICT:\n                raise PDFSyntaxError('N is not defined: %r' % stream)\n            n = 0\n        parser = PDFStreamParser(stream.get_data())\n        parser.set_document(self)\n        objs = []\n        try:\n            while 1:\n                (_, obj) = parser.nextobject()\n                objs.append(obj)\n        except PSEOF:\n            pass\n        return (objs, n)\n\n    def _getobj_parse(self, pos, objid):\n        self._parser.seek(pos)\n        (_, objid1) = self._parser.nexttoken()  # objid\n        if objid1 != objid:\n            raise PDFSyntaxError('objid mismatch: %r=%r' % (objid1, objid))\n        (_, genno) = self._parser.nexttoken()  # genno\n        (_, kwd) = self._parser.nexttoken()\n        if kwd != KWD(b'obj'):\n            raise PDFSyntaxError('Invalid object spec: offset=%r' % pos)\n        (_, obj) = self._parser.nextobject()\n        return obj\n\n    # can raise PDFObjectNotFound\n    def getobj(self, objid):\n        assert objid != 0\n        if not self.xrefs:\n            raise PDFException('PDFDocument is not initialized')\n        logging.debug('getobj: objid=%r', objid)\n        if objid in self._cached_objs:\n            (obj, genno) = self._cached_objs[objid]\n        else:\n            for xref in self.xrefs:\n                try:\n                    (strmid, index, genno) = xref.get_pos(objid)\n                except KeyError:\n                    continue\n                try:\n                    if strmid is not None:\n                        stream = stream_value(self.getobj(strmid))\n                        obj = self._getobj_objstm(stream, index, objid)\n                    else:\n                        obj = self._getobj_parse(index, objid)\n                        if self.decipher:\n                            obj = decipher_all(self.decipher, objid, genno, obj)\n\n                    if isinstance(obj, PDFStream):\n                        obj.set_objid(objid, genno)\n                    break\n                except (PSEOF, PDFSyntaxError):\n                    continue\n            else:\n                raise PDFObjectNotFound(objid)\n            logging.debug('register: objid=%r: %r', objid, obj)\n            if self.caching:\n                self._cached_objs[objid] = (obj, genno)\n        return obj\n\n    def get_outlines(self):\n        if 'Outlines' not in self.catalog:\n            raise PDFNoOutlines\n\n        def search(entry, level):\n            entry = dict_value(entry)\n            if 'Title' in entry:\n                if 'A' in entry or 'Dest' in entry:\n                    title = decode_text(str_value(entry['Title']))\n                    dest = entry.get('Dest')\n                    action = entry.get('A')\n                    se = entry.get('SE')\n                    yield (level, title, dest, action, se)\n            if 'First' in entry and 'Last' in entry:\n                for x in search(entry['First'], level+1):\n                    yield x\n            if 'Next' in entry:\n                for x in search(entry['Next'], level):\n                    yield x\n            return\n        return search(self.catalog['Outlines'], 0)\n\n    def lookup_name(self, cat, key):\n        try:\n            names = dict_value(self.catalog['Names'])\n        except (PDFTypeError, KeyError):\n            raise KeyError((cat, key))\n        # may raise KeyError\n        d0 = dict_value(names[cat])\n\n        def lookup(d):\n            if 'Limits' in d:\n                (k1, k2) = list_value(d['Limits'])\n                if key < k1 or k2 < key:\n                    return None\n            if 'Names' in d:\n                objs = list_value(d['Names'])\n                names = dict(choplist(2, objs))\n                return names[key]\n            if 'Kids' in d:\n                for c in list_value(d['Kids']):\n                    v = lookup(dict_value(c))\n                    if v:\n                        return v\n            raise KeyError((cat, key))\n        return lookup(d0)\n\n    def get_dest(self, name):\n        try:\n            # PDF-1.2 or later\n            obj = self.lookup_name('Dests', name)\n        except KeyError:\n            # PDF-1.1 or prior\n            if 'Dests' not in self.catalog:\n                raise PDFDestinationNotFound(name)\n            d0 = dict_value(self.catalog['Dests'])\n            if name not in d0:\n                raise PDFDestinationNotFound(name)\n            obj = d0[name]\n        return obj\n\n    # find_xref\n    def find_xref(self, parser):\n        \"\"\"Internal function used to locate the first XRef.\"\"\"\n        # search the last xref table by scanning the file backwards.\n        prev = None\n        for line in parser.revreadlines():\n            line = line.strip()\n            logging.debug('find_xref: %r', line)\n            if line == b'startxref':\n                break\n            if line:\n                prev = line\n        else:\n            raise PDFNoValidXRef('Unexpected EOF')\n        logging.info('xref found: pos=%r', prev)\n        return long(prev) if six.PY2 else int(prev)\n\n    # read xref table\n    def read_xref_from(self, parser, start, xrefs):\n        \"\"\"Reads XRefs from the given location.\"\"\"\n        parser.seek(start)\n        parser.reset()\n        try:\n            (pos, token) = parser.nexttoken()\n        except PSEOF:\n            raise PDFNoValidXRef('Unexpected EOF')\n        logging.info('read_xref_from: start=%d, token=%r', start, token)\n        if isinstance(token, int):\n            # XRefStream: PDF-1.5\n            parser.seek(pos)\n            parser.reset()\n            xref = PDFXRefStream()\n            xref.load(parser)\n        else:\n            if token is parser.KEYWORD_XREF:\n                parser.nextline()\n            xref = PDFXRef()\n            xref.load(parser)\n        xrefs.append(xref)\n        trailer = xref.get_trailer()\n        logging.info('trailer: %r', trailer)\n        if 'XRefStm' in trailer:\n            pos = int_value(trailer['XRefStm'])\n            self.read_xref_from(parser, pos, xrefs)\n        if 'Prev' in trailer:\n            # find previous xref\n            pos = int_value(trailer['Prev'])\n            self.read_xref_from(parser, pos, xrefs)\n        return\n",
			"file": "charmander/lib/python3.5/site-packages/pdfminer/pdfdocument.py",
			"file_size": 26804,
			"file_write_time": 131316808020000000,
			"settings":
			{
				"buffer_size": 26799,
				"line_ending": "Unix"
			}
		},
		{
			"file": "intrm_sid.txt",
			"settings":
			{
				"buffer_size": 271410,
				"line_ending": "Unix"
			}
		},
		{
			"file": "intrm_obsc.txt",
			"settings":
			{
				"buffer_size": 16125758,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 127.0,
		"last_filter": "Package Control: INs",
		"selected_items":
		[
			[
				"Package Control: INs",
				"Package Control: Install Package"
			],
			[
				"Package Control: disa",
				"Package Control: Disable Package"
			],
			[
				"upgrade",
				"Package Control: Upgrade Package"
			],
			[
				"Install",
				"Package Control: Install Package"
			],
			[
				"Install ",
				"Package Control: Install Package"
			],
			[
				"Snippet: reac",
				"Snippet: React: class component"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"Package Control: u",
				"Package Control: Upgrade Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: List Unmanaged Packages"
			],
			[
				"pac",
				"Package Control: List Packages"
			],
			[
				"unins",
				"Nodejs::NPM::Uninstall"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: install ",
				"Package Control: Install Package"
			],
			[
				"Package Control: remo",
				"Package Control: Remove Package"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			],
			[
				"Package Control: inst",
				"Package Control: Install Package"
			],
			[
				"Package Control: Re",
				"Package Control: Remove Package"
			],
			[
				"Package Control: upda",
				"Package Control: Upgrade Package"
			],
			[
				"Package Control: Dis",
				"Package Control: Discover Packages"
			],
			[
				"Package Control: rek",
				"Package Control: Upgrade Package"
			],
			[
				"Package Control: insa",
				"Package Control: Install Package"
			],
			[
				"Package Control: up",
				"Package Control: Upgrade Package"
			],
			[
				"Package Control: te",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 217.0,
		"history":
		[
			"reload",
			"os.environ.get('VIRTUAL_ENV')",
			"import os",
			"dir(sublime)",
			"sublime",
			"sublime.python_interpreter",
			"dir(sublime)",
			"sublime",
			"dir(os)",
			"help",
			"help(os.path)",
			"os.path('$VIRTUAL_ENV')",
			"os.path()",
			"os.path",
			"dir(os)",
			"dir()",
			"import os",
			"$VIRTUAL_ENV",
			"dir(window)",
			"dir(__package__)",
			"dir()",
			"sublime.packages_path()",
			"sublime.packages_path",
			"sublime.version()",
			"sublime.version",
			"dir(sublime)",
			"dir()",
			"python_interpreter_path",
			"settings",
			"exit()",
			"dir(sys)",
			"import sys",
			"print()",
			"print",
			"import flask",
			"python --version",
			"dir()",
			"ls",
			"exit",
			"clear()",
			"clear",
			"python3",
			"exit",
			"exit()",
			"__author__",
			"__name__",
			"dir()",
			"python3"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/sidmishraw/Documents/workspace/PythonLearning",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib/python3.5",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib/python3.5/site-packages",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib/python3.5/site-packages/pdfminer"
	],
	"file_history":
	[
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib/python3.5/struct.py",
		"/Users/sidmishraw/.pyenv/versions/3.5.2/lib/python3.5/argparse.py",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/HTML-CSS-JS Prettify/.jsbeautifyrc",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib/python3.5/site-packages/pdfminer/pdfinterp.py",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/bin/pdf2txt.py",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib/python3.5/site-packages/pdfminer/pdfdevice.py",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib/python3.5/site-packages/pdfminer/converter.py",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib/python3.5/site-packages/pdfminer/image.py",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib/python3.5/site-packages/pdfminer/pdfdocument.py",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/sid.txt",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/Sidharth Mishra.txt",
		"/Users/sidmishraw/.pyenv/versions/3.5.2/lib/python3.5/logging/__init__.py",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib/python3.5/io.py",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib/python3.5/os.py",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/read_bacteria.py",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib/python3.5/site-packages/pdb/__init__.py",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/GoSublime/USAGE.md",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib/python3.5/site-packages/six.py",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib/python3.5/site-packages/pdfminer/__init__.py",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib/python3.5/re.py",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/obscalculi_testing_pdf_conv.txt",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/rough_pdf_draft",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/process_pdf_rough.py",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/obscalculi_testing_pdf_conv.html",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/transform.py",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/sid_output.txt",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/.gitignore",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/testing_cci.py",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/input.txt",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/.pydevproject",
		"/Users/sidmishraw/.pyenv/versions/3.5.2/lib/python3.5/pprint.py",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/bacteria.json",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/PythonLearning.sublime-project",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib/python3.5/weakref.py",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/anaconda_rust/AnacondaRUST.sublime-settings",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/Python Breakpoints/PythonBreakpoints.sublime-settings",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib/python3.5/_weakrefset.py",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/Anaconda/Anaconda.sublime-settings",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib/python3.5/site-packages/sphinx/util/osutil.py",
		"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/os.py",
		"/Users/sidmishraw/Documents/workspace/react_learning/src/task.jsx",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/Emmet/Emmet.sublime-settings",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/Babel/Babel.sublime-settings",
		"/Users/sidmishraw/Documents/workspace/react_learning/src/task.js",
		"/Users/sidmishraw/Documents/workspace/react_learning/typescript_stuff/ts1.ts",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/TypeScript/TypeScript.sublime-settings",
		"/Users/sidmishraw/Documents/SJSU/ClassesSpring2017/CS_185_C_NoSQL/Notes.md",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/Markdown Preview/MarkdownPreview.sublime-settings",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/User/MarkdownPreview.sublime-settings",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/User/Package Control.sublime-settings",
		"/Users/sidmishraw/Documents/workspace/RustLearning/helloworld/main.rs",
		"/Users/sidmishraw/Documents/workspace/project_amc_theatre/core/service.py",
		"/Users/sidmishraw/Documents/workspace/project_amc_theatre/project_amc_theatre.sublime-project",
		"/Users/sidmishraw/Documents/workspace/project_amc_theatre/ivysaur/lib/python3.5/site-packages/flask/__init__.py",
		"/Users/sidmishraw/Documents/workspace/project_amc_theatre/ivysaur/lib/python3.5/site-packages/flask/app.py",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/User/Anaconda.sublime-settings",
		"/Users/sidmishraw/Documents/workspace/project_amc_theatre/ivysaur/lib/python3.5/site-packages/flask/wrappers.py",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/Package Control/Package Control.sublime-settings",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/Glue/keymaps/Default (OSX).sublime-keymap",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/Glue/Glue.sublime-settings",
		"/usr/local/Cellar/python3/3.5.2_3/Frameworks/Python.framework/Versions/3.5/lib/python3.5/json/decoder.py",
		"/usr/local/Cellar/python3/3.5.2_3/Frameworks/Python.framework/Versions/3.5/lib/python3.5/json/__init__.py",
		"/Users/sidmishraw/Documents/workspace/project_amc_theatre/templates/user_landing.html",
		"/Users/sidmishraw/Documents/workspace/project_amc_theatre/main_driver.py",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/SublimeCodeIntel/Default (OSX).sublime-keymap",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/SublimeCodeIntel/SublimeCodeIntel.sublime-settings",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/Jedi - Python autocompletion/Default.sublime-keymap",
		"/Users/sidmishraw/Documents/workspace/project_amc_theatre/core/bo.py",
		"/Users/sidmishraw/Documents/workspace/project_amc_theatre/ivysaur/lib/python3.5/site-packages/itsdangerous.py",
		"/Users/sidmishraw/Documents/workspace/project_amc_theatre/ivysaur/lib/python3.5/site-packages/flask/templating.py",
		"/Library/Python/2.7/site-packages/flask/__init__.py",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/Jedi - Python autocompletion/sublime_jedi.sublime-settings",
		"/Users/sidmishraw/Documents/workspace/project_amc_theatre/env.anaconda",
		"/Users/sidmishraw/Documents/workspace/project_amc_theatre/.gitignore",
		"/Users/sidmishraw/Documents/workspace/project_amc_theatre/requirements.txt",
		"/Users/sidmishraw/Documents/workspace/project_amc_theatre/README.md",
		"/Library/Python/2.7/site-packages/werkzeug/local.py",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/hrank.py",
		"/Users/sidmishraw/Documents/workspace/amc_rough_node/templates/login.html",
		"/Users/sidmishraw/Documents/workspace/amc_rough_node/index.js",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/Nodejs/Nodejs.sublime-settings",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib/python3.5/site-packages/pymining/seqmining.py",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib/python3.5/site-packages/pymining/itemmining.py",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib/python3.5/site-packages/pymining/compat.py",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib/python3.5/site-packages/pymining/assocrules.py",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/charmander/lib/python3.5/site-packages/pymining/__init__.py",
		"/Users/sidmishraw/Documents/workspace/PythonLearning/terminal.glue",
		"/Users/sidmishraw/Documents/workspace/project_amc_theatre/templates/index.html",
		"/Users/sidmishraw/Documents/workspace/project_amc_theatre/templates/login.html",
		"/Users/sidmishraw/Documents/SJSU/ClassesSpring2017/CS_267/notes.md",
		"/Users/sidmishraw/Documents/workspace/Python_DS_Suite/example_flask.py",
		"/Users/sidmishraw/Documents/workspace/project_amc_theatre/core/__init__.py",
		"/Users/sidmishraw/Documents/workspace/pythonstuffv1/kivy_1/build_kivy1.py",
		"/Users/sidmishraw/Documents/workspace/pythonstuffv1/kivy_1/main.py",
		"/Users/sidmishraw/Documents/workspace/Python_DS_Suite/lists/lists.py",
		"/Users/sidmishraw/Documents/workspace/Python_DS_Suite/example.py",
		"/Users/sidmishraw/AndroidStudio/ProjectOrion/.gitignore",
		"/Users/sidmishraw/Documents/workspace/pychess_sid_1/pychess1/pychess1/gameplay.py",
		"/usr/local/Cellar/python3/3.6.0/Frameworks/Python.framework/Versions/3.6/lib/python3.6/json/__init__.py",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/User/JSON.sublime-settings",
		"/Users/sidmishraw/Documents/workspace/pychess_sid_1/pychess1/pychess1/__init__.py",
		"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib.py",
		"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/__init__.py",
		"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/encoder.py",
		"/Users/sidmishraw/Documents/workspace/pythonstuffv1/actransit_app/actransit_example.py",
		"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/webbrowser.py",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/Anaconda/Default (OSX).sublime-keymap",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/User/Python.sublime-settings",
		"/Users/sidmishraw/Documents/workspace/pythonstuffv1/actransit_app/ac_transit_api_consumer/.gitignore",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/Anaconda/README.md",
		"/Users/sidmishraw/Documents/workspace/pychess_sid_1/pychess1/.editorconfig",
		"/Users/sidmishraw/Documents/workspace/pythonstuffv1/hackerrank_python_exercises.py",
		"/Users/sidmishraw/Documents/workspace/Python_DS_Suite/trees/trees.py",
		"/Users/sidmishraw/Documents/workspace/pythonstuffv1/README.md",
		"/Users/sidmishraw/Documents/workspace/pychess_sid_1/pychess1/setup.py",
		"/Users/sidmishraw/Documents/workspace/pychess_sid_1/pychess1/README.rst",
		"/Users/sidmishraw/Documents/workspace/pychess_sid_1/pychess1/HISTORY.rst",
		"/Users/sidmishraw/Documents/workspace/pychess_sid_1/pychess1/pychess1/pychess1.py",
		"/Users/sidmishraw/Documents/workspace/pychess_sid_1/pychess1/docs/conf.py",
		"/Users/sidmishraw/Documents/Databases/mysql-connector-python-2.1.5/setup.py",
		"/Users/sidmishraw/Documents/workspace/pythonstuffv1/actransit_app/ac_transit_api_consumer/setup.py",
		"/Users/sidmishraw/Documents/workspace/pythonstuffv1/actransit_app/ac_transit_api_consumer/ac_transit_api_consumer/ac_transit_api_consumer.py",
		"/Users/sidmishraw/Documents/workspace/pythonstuffv1/actransit_app/ac_transit_api_consumer/ac_transit_api_consumer/__init__.py",
		"/Users/sidmishraw/Documents/workspace/jsstuffv1/node_start.js",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/tern_for_sublime/Tern.sublime-settings",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/User/Tern.sublime-settings",
		"/Users/sidmishraw/Library/Application Support/Sublime Text 3/Packages/tern_for_sublime/Default.sublime-keymap",
		"/Users/sidmishraw/Documents/Books/js mdn tutorials/gallery-start/style.css"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"i_list",
			"struct",
			"\\([^\\(\\).]*\\)",
			"Encoding",
			"72 0 obj",
			"__STREAM__",
			"^M",
			"__CR_EOF__",
			"LF",
			"name",
			"(\\([^\\(\\).]*\\))",
			"(\\(^[\\(\\)].*\\)))",
			">>>>>>>>>>>>>>>>>>>>>>>>>>\n",
			":",
			"(\\(^[\\(\\)].*\\)))",
			"(\\(([\\w\\d\\ ]*\\)))",
			"([\\(.*\\)])",
			".*\\\\(.*\\\\).*",
			"FlateDecode",
			"b'\\n%%EOF\\n'",
			"stream",
			"xref",
			"bytes_string",
			"+ ",
			",",
			"zlib",
			"Aim",
			"2 Aim",
			"2 GUHA",
			"presented",
			"import isinstance",
			"def isinstance",
			"export_image",
			"file",
			"export_image",
			"export",
			"__process_pdf__",
			"os",
			"SEPARATOR",
			"pathsep",
			"stream",
			"endstream",
			">",
			"time",
			"task",
			"Task",
			"reportees",
			"user_dict",
			" = ",
			"request",
			"Flask",
			"flask",
			"Flask",
			"flask",
			"is_complete",
			"path",
			"temp",
			"MyQueue",
			"*",
			"\n*",
			"interpreter",
			"python interpreter",
			"A",
			"a_dict",
			"b_dict",
			"element[0]",
			"hashvalue",
			"left",
			")",
			"int(",
			"false",
			"count_ways",
			"space",
			"spaces",
			"pep",
			"interpreter",
			"return",
			"ACTransitStop",
			"ACTransitStopsObject",
			"option",
			"alt",
			"opt",
			"init",
			"50",
			")\n",
			"2",
			"group",
			"n",
			"k",
			"insert",
			"transactions[i]",
			"spend",
			"transactions[i]",
			"0",
			"counting_array",
			"median_count_sort",
			"median_floor",
			"array",
			"  \n",
			"1",
			"key_element",
			"pivot_index",
			"j",
			".(",
			"       ",
			"[]"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "process_pdf.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4814,
						"regions":
						{
						},
						"selection":
						[
							[
								1053,
								1064
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								225,
								2,
								15,
								13,
								42,
								12,
								0,
								0,
								0,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"git_gutter_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2130.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "process_pdf_rough.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9248,
						"regions":
						{
						},
						"selection":
						[
							[
								8715,
								8763
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								225,
								2,
								21,
								19,
								27,
								25,
								0,
								0,
								0,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"git_gutter_enabled": true,
							"rulers":
							[
								100
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"word_wrap": false,
							"wrap_width": 100
						},
						"translation.x": 0.0,
						"translation.y": 3945.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "process_pdf_rough2.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2220,
						"regions":
						{
						},
						"selection":
						[
							[
								1566,
								1566
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								225,
								3,
								5,
								17,
								48,
								50,
								0,
								0,
								0,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"git_gutter_enabled": true,
							"rulers":
							[
								100
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 546.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "obscalculi_testing_pdf_conv.pdf",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 257769,
						"regions":
						{
						},
						"selection":
						[
							[
								1671,
								1680
							]
						],
						"settings":
						{
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								225,
								2,
								16,
								18,
								6,
								38,
								0,
								0,
								0,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"git_gutter_enabled": true,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 60909.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "charmander/lib/python3.5/site-packages/pdfminer/pdfdocument.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26799,
						"regions":
						{
						},
						"selection":
						[
							[
								14478,
								14478
							]
						],
						"settings":
						{
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								225,
								2,
								15,
								17,
								6,
								42,
								0,
								0,
								0,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"git_gutter_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6622.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "intrm_sid.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 271410,
						"regions":
						{
						},
						"selection":
						[
							[
								203,
								207
							],
							[
								212,
								215
							],
							[
								220,
								223
							],
							[
								228,
								231
							],
							[
								237,
								240
							],
							[
								248,
								252
							],
							[
								257,
								260
							],
							[
								265,
								269
							],
							[
								274,
								277
							],
							[
								283,
								286
							],
							[
								291,
								294
							],
							[
								300,
								303
							],
							[
								398,
								402
							],
							[
								410,
								413
							],
							[
								419,
								422
							],
							[
								428,
								431
							],
							[
								437,
								441
							],
							[
								446,
								449
							],
							[
								463,
								467
							],
							[
								473,
								477
							],
							[
								483,
								487
							],
							[
								495,
								498
							],
							[
								504,
								508
							],
							[
								514,
								518
							],
							[
								532,
								535
							],
							[
								541,
								544
							],
							[
								550,
								553
							],
							[
								655,
								658
							],
							[
								664,
								667
							],
							[
								673,
								676
							],
							[
								682,
								688
							],
							[
								697,
								700
							],
							[
								706,
								709
							],
							[
								715,
								719
							],
							[
								727,
								730
							],
							[
								736,
								739
							],
							[
								745,
								748
							],
							[
								814,
								817
							],
							[
								823,
								826
							],
							[
								831,
								834
							],
							[
								839,
								842
							],
							[
								848,
								852
							],
							[
								857,
								860
							],
							[
								865,
								868
							],
							[
								873,
								876
							],
							[
								884,
								887
							],
							[
								893,
								896
							],
							[
								910,
								913
							],
							[
								919,
								922
							],
							[
								928,
								931
							],
							[
								937,
								941
							],
							[
								947,
								950
							],
							[
								956,
								959
							],
							[
								967,
								970
							],
							[
								984,
								988
							],
							[
								994,
								998
							],
							[
								1003,
								1006
							],
							[
								1012,
								1015
							],
							[
								1021,
								1024
							],
							[
								1029,
								1033
							],
							[
								1041,
								1044
							],
							[
								1050,
								1054
							],
							[
								1060,
								1064
							],
							[
								1070,
								1074
							],
							[
								1080,
								1083
							],
							[
								1178,
								1181
							],
							[
								1187,
								1190
							],
							[
								1197,
								1200
							],
							[
								1205,
								1208
							],
							[
								1214,
								1218
							],
							[
								1223,
								1226
							],
							[
								1231,
								1234
							],
							[
								1239,
								1242
							],
							[
								1248,
								1251
							],
							[
								1257,
								1260
							],
							[
								1265,
								1268
							],
							[
								1276,
								1279
							],
							[
								1285,
								1288
							],
							[
								1302,
								1306
							],
							[
								1312,
								1316
							],
							[
								1321,
								1325
							],
							[
								1331,
								1334
							],
							[
								1340,
								1344
							],
							[
								1352,
								1356
							],
							[
								1362,
								1366
							],
							[
								1372,
								1375
							],
							[
								1530,
								1533
							],
							[
								1538,
								1541
							],
							[
								1547,
								1550
							],
							[
								1556,
								1560
							],
							[
								1566,
								1569
							],
							[
								1574,
								1577
							],
							[
								1584,
								1588
							],
							[
								1669,
								1673
							],
							[
								1736,
								1740
							],
							[
								1746,
								1749
							],
							[
								1755,
								1759
							],
							[
								1765,
								1768
							],
							[
								1774,
								1777
							],
							[
								1783,
								1786
							],
							[
								1791,
								1794
							],
							[
								1800,
								1803
							],
							[
								1810,
								1813
							],
							[
								1819,
								1822
							],
							[
								1828,
								1832
							],
							[
								1838,
								1841
							],
							[
								1846,
								1849
							],
							[
								1855,
								1858
							],
							[
								1864,
								1867
							],
							[
								1873,
								1876
							],
							[
								1881,
								1884
							],
							[
								1892,
								1896
							],
							[
								1901,
								1904
							],
							[
								1910,
								1913
							],
							[
								1919,
								1922
							],
							[
								1927,
								1931
							],
							[
								1937,
								1940
							],
							[
								1945,
								1948
							],
							[
								1953,
								1956
							],
							[
								1964,
								1967
							],
							[
								1973,
								1977
							],
							[
								1983,
								1986
							],
							[
								1991,
								1995
							],
							[
								2001,
								2004
							],
							[
								2010,
								2013
							],
							[
								2019,
								2022
							],
							[
								2028,
								2031
							],
							[
								2037,
								2040
							],
							[
								2048,
								2052
							],
							[
								2058,
								2061
							],
							[
								2067,
								2070
							],
							[
								2076,
								2079
							],
							[
								2084,
								2087
							],
							[
								2092,
								2095
							],
							[
								2101,
								2104
							],
							[
								2109,
								2112
							],
							[
								2120,
								2124
							],
							[
								2130,
								2133
							],
							[
								2138,
								2141
							],
							[
								2146,
								2149
							],
							[
								2155,
								2159
							],
							[
								2164,
								2168
							],
							[
								2174,
								2179
							],
							[
								2185,
								2189
							],
							[
								2196,
								2199
							],
							[
								2205,
								2208
							],
							[
								2214,
								2217
							],
							[
								2223,
								2226
							],
							[
								2300,
								2304
							],
							[
								2310,
								2315
							],
							[
								2321,
								2324
							],
							[
								2330,
								2333
							],
							[
								2414,
								2418
							],
							[
								2479,
								2486
							],
							[
								2549,
								2553
							],
							[
								2559,
								2562
							],
							[
								2568,
								2572
							],
							[
								2578,
								2581
							],
							[
								2587,
								2590
							],
							[
								2595,
								2598
							],
							[
								2604,
								2608
							],
							[
								2615,
								2618
							],
							[
								2624,
								2627
							],
							[
								2633,
								2636
							],
							[
								2642,
								2645
							],
							[
								2650,
								2653
							],
							[
								2659,
								2662
							],
							[
								2668,
								2673
							],
							[
								2679,
								2682
							],
							[
								2690,
								2693
							],
							[
								2699,
								2702
							],
							[
								2708,
								2711
							],
							[
								2716,
								2719
							],
							[
								2725,
								2728
							],
							[
								2733,
								2737
							],
							[
								2743,
								2746
							],
							[
								2752,
								2755
							],
							[
								2761,
								2764
							],
							[
								2772,
								2775
							],
							[
								2781,
								2784
							],
							[
								2790,
								2793
							],
							[
								2798,
								2802
							],
							[
								2807,
								2810
							],
							[
								2816,
								2819
							],
							[
								2825,
								2828
							],
							[
								2834,
								2837
							],
							[
								2845,
								2848
							],
							[
								2853,
								2856
							],
							[
								2861,
								2865
							],
							[
								2871,
								2876
							],
							[
								2882,
								2885
							],
							[
								2891,
								2894
							],
							[
								2899,
								2902
							],
							[
								2908,
								2912
							],
							[
								2917,
								2920
							],
							[
								2928,
								2931
							],
							[
								2937,
								2941
							],
							[
								2947,
								2950
							],
							[
								2956,
								2959
							],
							[
								2965,
								2968
							],
							[
								2974,
								2977
							],
							[
								2983,
								2986
							],
							[
								2991,
								2994
							],
							[
								3002,
								3005
							],
							[
								3011,
								3014
							],
							[
								3037,
								3040
							],
							[
								3045,
								3048
							],
							[
								3054,
								3057
							],
							[
								3063,
								3067
							],
							[
								3073,
								3076
							],
							[
								3084,
								3087
							],
							[
								3092,
								3095
							],
							[
								3101,
								3105
							],
							[
								3110,
								3115
							],
							[
								3121,
								3124
							],
							[
								3130,
								3133
							],
							[
								3139,
								3143
							],
							[
								3149,
								3152
							],
							[
								3159,
								3162
							],
							[
								3168,
								3171
							],
							[
								3176,
								3179
							],
							[
								3184,
								3188
							],
							[
								3194,
								3197
							],
							[
								3203,
								3206
							],
							[
								3211,
								3215
							],
							[
								3221,
								3225
							],
							[
								3233,
								3236
							],
							[
								3241,
								3245
							],
							[
								3250,
								3253
							],
							[
								3259,
								3262
							],
							[
								3267,
								3270
							],
							[
								3276,
								3279
							],
							[
								3284,
								3287
							],
							[
								3293,
								3296
							],
							[
								3302,
								3305
							],
							[
								3313,
								3317
							],
							[
								3323,
								3328
							],
							[
								3334,
								3337
							],
							[
								3342,
								3346
							],
							[
								3416,
								3422
							],
							[
								3428,
								3434
							],
							[
								3499,
								3506
							],
							[
								3569,
								3572
							],
							[
								3578,
								3582
							],
							[
								3587,
								3591
							],
							[
								3597,
								3600
							],
							[
								3606,
								3611
							],
							[
								3616,
								3619
							],
							[
								3625,
								3628
							],
							[
								3633,
								3636
							],
							[
								3643,
								3646
							],
							[
								3652,
								3656
							],
							[
								3662,
								3665
							],
							[
								3671,
								3675
							],
							[
								3681,
								3684
							],
							[
								3690,
								3693
							],
							[
								3699,
								3703
							],
							[
								3709,
								3712
							],
							[
								3719,
								3722
							],
							[
								3728,
								3732
							],
							[
								3737,
								3740
							],
							[
								3746,
								3749
							],
							[
								3754,
								3758
							],
							[
								3764,
								3767
							],
							[
								3772,
								3775
							],
							[
								3780,
								3783
							],
							[
								3789,
								3792
							],
							[
								3800,
								3804
							],
							[
								3810,
								3813
							],
							[
								3818,
								3821
							],
							[
								3827,
								3830
							],
							[
								3836,
								3840
							],
							[
								3846,
								3849
							],
							[
								3855,
								3858
							],
							[
								3864,
								3867
							],
							[
								3875,
								3878
							],
							[
								3884,
								3887
							],
							[
								3893,
								3896
							],
							[
								3901,
								3904
							],
							[
								3909,
								3912
							],
							[
								3918,
								3921
							],
							[
								3927,
								3931
							],
							[
								3937,
								3940
							],
							[
								3946,
								3949
							],
							[
								3957,
								3960
							],
							[
								3965,
								3968
							],
							[
								3974,
								3978
							],
							[
								3984,
								3987
							],
							[
								3993,
								3997
							],
							[
								4003,
								4006
							],
							[
								4012,
								4015
							],
							[
								4021,
								4025
							],
							[
								4033,
								4036
							],
							[
								4041,
								4044
							],
							[
								4050,
								4053
							],
							[
								4059,
								4062
							],
							[
								4067,
								4071
							],
							[
								4077,
								4080
							],
							[
								4086,
								4089
							],
							[
								4095,
								4098
							],
							[
								4106,
								4109
							],
							[
								4115,
								4118
							],
							[
								4123,
								4126
							],
							[
								4132,
								4135
							],
							[
								4141,
								4145
							],
							[
								4151,
								4154
							],
							[
								4160,
								4163
							],
							[
								4169,
								4172
							],
							[
								4177,
								4180
							],
							[
								4187,
								4190
							],
							[
								4196,
								4199
							],
							[
								4205,
								4208
							],
							[
								4214,
								4217
							],
							[
								4223,
								4226
							],
							[
								4232,
								4236
							],
							[
								4242,
								4245
							],
							[
								4250,
								4253
							],
							[
								4261,
								4264
							],
							[
								4270,
								4273
							],
							[
								4279,
								4282
							],
							[
								4287,
								4290
							],
							[
								4296,
								4299
							],
							[
								4305,
								4309
							],
							[
								4315,
								4318
							],
							[
								4324,
								4327
							],
							[
								4333,
								4336
							],
							[
								4344,
								4348
							],
							[
								4354,
								4357
							],
							[
								4363,
								4366
							],
							[
								4371,
								4374
							],
							[
								4379,
								4382
							],
							[
								4388,
								4391
							],
							[
								4397,
								4400
							],
							[
								4406,
								4409
							],
							[
								4474,
								4478
							],
							[
								4484,
								4487
							],
							[
								4495,
								4498
							],
							[
								4504,
								4507
							],
							[
								4512,
								4515
							],
							[
								4521,
								4524
							],
							[
								4530,
								4533
							],
							[
								4539,
								4542
							],
							[
								4548,
								4552
							],
							[
								4624,
								4631
							],
							[
								4694,
								4697
							],
							[
								4703,
								4706
							],
							[
								4711,
								4715
							],
							[
								4721,
								4724
							],
							[
								4730,
								4733
							],
							[
								4741,
								4745
							],
							[
								4751,
								4755
							],
							[
								4761,
								4764
							],
							[
								4769,
								4772
							],
							[
								4777,
								4780
							],
							[
								4786,
								4789
							],
							[
								4795,
								4799
							],
							[
								4804,
								4807
							],
							[
								4815,
								4818
							],
							[
								4824,
								4829
							],
							[
								4835,
								4839
							],
							[
								4844,
								4847
							],
							[
								4853,
								4856
							],
							[
								4862,
								4866
							],
							[
								4872,
								4875
							],
							[
								4881,
								4884
							],
							[
								4892,
								4895
							],
							[
								4900,
								4904
							],
							[
								4909,
								4913
							],
							[
								4919,
								4922
							],
							[
								4928,
								4931
							],
							[
								4937,
								4940
							],
							[
								4945,
								4948
							],
							[
								4954,
								4957
							],
							[
								4963,
								4966
							],
							[
								4974,
								4977
							],
							[
								4983,
								4987
							],
							[
								4992,
								4995
							],
							[
								5001,
								5005
							],
							[
								5011,
								5014
							],
							[
								5020,
								5023
							],
							[
								5028,
								5031
							],
							[
								5036,
								5039
							],
							[
								5047,
								5051
							],
							[
								5057,
								5060
							],
							[
								5066,
								5069
							],
							[
								5075,
								5078
							],
							[
								5084,
								5090
							],
							[
								5096,
								5099
							],
							[
								5105,
								5109
							],
							[
								5115,
								5118
							],
							[
								5126,
								5129
							],
							[
								5135,
								5138
							],
							[
								5143,
								5146
							],
							[
								5152,
								5155
							],
							[
								5161,
								5164
							],
							[
								5170,
								5173
							],
							[
								5178,
								5181
							],
							[
								5187,
								5190
							],
							[
								5196,
								5199
							],
							[
								5206,
								5209
							],
							[
								5215,
								5219
							],
							[
								5225,
								5228
							],
							[
								5234,
								5239
							],
							[
								5245,
								5248
							],
							[
								5254,
								5257
							],
							[
								5263,
								5266
							],
							[
								5272,
								5275
							],
							[
								5282,
								5287
							],
							[
								5293,
								5296
							],
							[
								5302,
								5305
							],
							[
								5380,
								5384
							],
							[
								5390,
								5393
							],
							[
								5399,
								5402
							],
							[
								5408,
								5411
							],
							[
								5417,
								5420
							],
							[
								5425,
								5428
							],
							[
								5433,
								5436
							],
							[
								5443,
								5446
							],
							[
								5527,
								5531
							],
							[
								5605,
								5609
							],
							[
								5615,
								5618
							],
							[
								5623,
								5626
							],
							[
								5631,
								5634
							],
							[
								5640,
								5643
							],
							[
								5648,
								5651
							],
							[
								5657,
								5660
							],
							[
								5666,
								5669
							],
							[
								5676,
								5681
							],
							[
								5687,
								5691
							],
							[
								5697,
								5700
							],
							[
								5705,
								5708
							],
							[
								5714,
								5717
							],
							[
								5722,
								5725
							],
							[
								5730,
								5733
							],
							[
								5739,
								5742
							],
							[
								5748,
								5751
							],
							[
								5759,
								5762
							],
							[
								5768,
								5771
							],
							[
								5776,
								5780
							],
							[
								5786,
								5789
							],
							[
								5799,
								5803
							],
							[
								5809,
								5813
							],
							[
								5819,
								5825
							],
							[
								5832,
								5835
							],
							[
								5842,
								5846
							],
							[
								5852,
								5855
							],
							[
								5860,
								5863
							],
							[
								5868,
								5871
							],
							[
								5877,
								5880
							],
							[
								5885,
								5888
							],
							[
								5894,
								5897
							],
							[
								5903,
								5906
							],
							[
								5911,
								5914
							],
							[
								5921,
								5924
							],
							[
								5930,
								5933
							],
							[
								6011,
								6014
							],
							[
								6019,
								6022
							],
							[
								6027,
								6030
							],
							[
								6035,
								6038
							],
							[
								6043,
								6046
							],
							[
								6051,
								6054
							],
							[
								6059,
								6062
							],
							[
								6067,
								6070
							],
							[
								6077,
								6080
							],
							[
								6085,
								6088
							],
							[
								6093,
								6096
							],
							[
								6101,
								6104
							],
							[
								6109,
								6112
							],
							[
								6117,
								6120
							],
							[
								6125,
								6128
							],
							[
								6133,
								6136
							],
							[
								6141,
								6144
							],
							[
								6151,
								6154
							],
							[
								6159,
								6162
							],
							[
								6167,
								6170
							],
							[
								6175,
								6178
							],
							[
								6183,
								6186
							],
							[
								6191,
								6194
							],
							[
								6199,
								6202
							],
							[
								6207,
								6210
							],
							[
								6215,
								6218
							],
							[
								6223,
								6226
							],
							[
								6233,
								6236
							],
							[
								6241,
								6244
							],
							[
								6249,
								6252
							],
							[
								6257,
								6260
							],
							[
								6265,
								6268
							],
							[
								6273,
								6276
							],
							[
								6281,
								6284
							],
							[
								6289,
								6292
							],
							[
								6297,
								6300
							],
							[
								6308,
								6311
							],
							[
								6317,
								6320
							],
							[
								6325,
								6328
							],
							[
								6334,
								6337
							],
							[
								6343,
								6346
							],
							[
								6352,
								6355
							],
							[
								6361,
								6364
							],
							[
								6369,
								6373
							],
							[
								6378,
								6382
							],
							[
								6390,
								6393
							],
							[
								6399,
								6402
							],
							[
								6408,
								6411
							],
							[
								6417,
								6420
							],
							[
								6425,
								6428
							],
							[
								6511,
								6514
							],
							[
								6519,
								6522
							],
							[
								6528,
								6531
							],
							[
								6539,
								6543
							],
							[
								6549,
								6552
							],
							[
								6558,
								6561
							],
							[
								6566,
								6569
							],
							[
								6575,
								6579
							],
							[
								6584,
								6589
							],
							[
								6595,
								6598
							],
							[
								6604,
								6607
							],
							[
								6615,
								6619
							],
							[
								6625,
								6628
							],
							[
								6638,
								6641
							],
							[
								6646,
								6649
							],
							[
								6655,
								6658
							],
							[
								6664,
								6667
							],
							[
								6672,
								6675
							],
							[
								6680,
								6683
							],
							[
								6688,
								6691
							],
							[
								6707,
								6710
							],
							[
								6716,
								6719
							],
							[
								6724,
								6727
							],
							[
								6741,
								6744
							],
							[
								6750,
								6756
							],
							[
								6833,
								6836
							],
							[
								6841,
								6844
							],
							[
								6849,
								6852
							],
							[
								6858,
								6862
							],
							[
								6867,
								6871
							],
							[
								6878,
								6882
							],
							[
								6888,
								6891
							],
							[
								6896,
								6899
							],
							[
								6904,
								6908
							],
							[
								6913,
								6916
							],
							[
								6922,
								6925
							],
							[
								6931,
								6934
							],
							[
								6940,
								6943
							],
							[
								6950,
								6953
							],
							[
								6958,
								6961
							],
							[
								6966,
								6969
							],
							[
								6975,
								6978
							],
							[
								6984,
								6987
							],
							[
								6992,
								6995
							],
							[
								7000,
								7004
							],
							[
								7009,
								7012
							],
							[
								7017,
								7020
							],
							[
								7028,
								7031
							],
							[
								7037,
								7041
							],
							[
								7046,
								7049
							],
							[
								7054,
								7057
							],
							[
								7062,
								7065
							],
							[
								7070,
								7073
							],
							[
								7079,
								7082
							],
							[
								7087,
								7090
							],
							[
								7095,
								7098
							],
							[
								7105,
								7108
							],
							[
								7114,
								7117
							],
							[
								7123,
								7126
							],
							[
								7132,
								7135
							],
							[
								7141,
								7144
							],
							[
								7150,
								7153
							],
							[
								7159,
								7162
							],
							[
								7168,
								7171
							],
							[
								7176,
								7179
							],
							[
								7186,
								7189
							],
							[
								7194,
								7197
							],
							[
								7202,
								7205
							],
							[
								7210,
								7213
							],
							[
								7218,
								7221
							],
							[
								7226,
								7229
							],
							[
								7235,
								7238
							],
							[
								7243,
								7246
							],
							[
								7251,
								7254
							],
							[
								7261,
								7264
							],
							[
								7269,
								7272
							],
							[
								7277,
								7280
							],
							[
								7285,
								7288
							],
							[
								7293,
								7296
							],
							[
								7301,
								7304
							],
							[
								7309,
								7312
							],
							[
								7317,
								7320
							],
							[
								7325,
								7328
							],
							[
								7333,
								7336
							],
							[
								7343,
								7346
							],
							[
								7351,
								7354
							],
							[
								7359,
								7362
							],
							[
								7367,
								7370
							],
							[
								7375,
								7378
							],
							[
								7383,
								7386
							],
							[
								7391,
								7394
							],
							[
								7399,
								7402
							],
							[
								7407,
								7410
							],
							[
								7417,
								7420
							],
							[
								7425,
								7428
							],
							[
								7433,
								7436
							],
							[
								7441,
								7444
							],
							[
								7453,
								7456
							],
							[
								7461,
								7464
							],
							[
								7469,
								7472
							],
							[
								7477,
								7480
							],
							[
								7485,
								7488
							],
							[
								7495,
								7498
							],
							[
								7503,
								7506
							],
							[
								7511,
								7514
							],
							[
								7519,
								7522
							],
							[
								7527,
								7530
							],
							[
								7535,
								7538
							],
							[
								7543,
								7546
							],
							[
								7551,
								7554
							],
							[
								7559,
								7562
							],
							[
								7567,
								7570
							],
							[
								7577,
								7580
							],
							[
								7585,
								7588
							],
							[
								7593,
								7596
							],
							[
								7601,
								7604
							],
							[
								7609,
								7612
							],
							[
								7617,
								7620
							],
							[
								7625,
								7628
							],
							[
								7633,
								7636
							],
							[
								7641,
								7644
							],
							[
								7651,
								7654
							],
							[
								7659,
								7662
							],
							[
								7667,
								7670
							],
							[
								7675,
								7678
							],
							[
								7683,
								7686
							],
							[
								7691,
								7694
							],
							[
								7699,
								7702
							],
							[
								7707,
								7710
							],
							[
								7715,
								7718
							],
							[
								7723,
								7726
							],
							[
								7733,
								7736
							],
							[
								7741,
								7744
							],
							[
								7750,
								7753
							],
							[
								7759,
								7762
							],
							[
								7767,
								7770
							],
							[
								7776,
								7779
							],
							[
								7785,
								7788
							],
							[
								7794,
								7797
							],
							[
								7805,
								7808
							],
							[
								7813,
								7817
							],
							[
								7822,
								7825
							],
							[
								7831,
								7834
							],
							[
								7840,
								7843
							],
							[
								7848,
								7851
							],
							[
								7857,
								7860
							],
							[
								7866,
								7869
							],
							[
								7875,
								7878
							],
							[
								7952,
								7955
							],
							[
								7962,
								7965
							],
							[
								7971,
								7975
							],
							[
								7981,
								7984
							],
							[
								7989,
								7992
							],
							[
								7998,
								8001
							],
							[
								8007,
								8011
							],
							[
								8017,
								8020
							],
							[
								8026,
								8029
							],
							[
								8036,
								8039
							],
							[
								8045,
								8049
							],
							[
								8054,
								8059
							],
							[
								8065,
								8068
							],
							[
								8074,
								8077
							],
							[
								8083,
								8087
							],
							[
								8093,
								8096
							],
							[
								8101,
								8104
							],
							[
								8112,
								8115
							],
							[
								8121,
								8124
							],
							[
								8130,
								8133
							],
							[
								8138,
								8142
							],
							[
								8148,
								8151
							],
							[
								8157,
								8160
							],
							[
								8166,
								8169
							],
							[
								8175,
								8178
							],
							[
								8184,
								8187
							],
							[
								8195,
								8199
							],
							[
								8205,
								8208
							],
							[
								8214,
								8217
							],
							[
								8223,
								8226
							],
							[
								8236,
								8239
							],
							[
								8244,
								8247
							],
							[
								8253,
								8256
							],
							[
								8262,
								8265
							],
							[
								8272,
								8275
							],
							[
								8280,
								8283
							],
							[
								8288,
								8291
							],
							[
								8305,
								8308
							],
							[
								8314,
								8317
							],
							[
								8323,
								8326
							],
							[
								8331,
								8334
							],
							[
								8350,
								8353
							],
							[
								8359,
								8365
							],
							[
								8459,
								8463
							],
							[
								8469,
								8472
							],
							[
								8477,
								8480
							],
							[
								8485,
								8488
							],
							[
								8493,
								8497
							],
							[
								8567,
								8570
							],
							[
								8633,
								8636
							],
							[
								8642,
								8645
							],
							[
								8650,
								8653
							],
							[
								8658,
								8661
							],
							[
								8666,
								8669
							],
							[
								8677,
								8680
							],
							[
								8685,
								8689
							],
							[
								8761,
								8766
							],
							[
								8772,
								8775
							],
							[
								8781,
								8784
							],
							[
								8790,
								8794
							],
							[
								8800,
								8803
							],
							[
								8808,
								8811
							],
							[
								8816,
								8821
							],
							[
								8827,
								8830
							],
							[
								8838,
								8841
							],
							[
								8847,
								8850
							],
							[
								8855,
								8858
							],
							[
								8863,
								8866
							],
							[
								8871,
								8874
							],
							[
								8880,
								8883
							],
							[
								8888,
								8891
							],
							[
								8897,
								8900
							],
							[
								8906,
								8909
							],
							[
								8917,
								8920
							],
							[
								8926,
								8930
							],
							[
								8935,
								8938
							],
							[
								8943,
								8946
							],
							[
								8952,
								8955
							],
							[
								8961,
								8964
							],
							[
								8970,
								8973
							],
							[
								8978,
								8981
							],
							[
								8988,
								8991
							],
							[
								8996,
								8999
							],
							[
								9005,
								9008
							],
							[
								9014,
								9018
							],
							[
								9023,
								9027
							],
							[
								9033,
								9036
							],
							[
								9042,
								9045
							],
							[
								9051,
								9054
							],
							[
								9060,
								9063
							],
							[
								9071,
								9075
							],
							[
								9080,
								9083
							],
							[
								9089,
								9092
							],
							[
								9097,
								9100
							],
							[
								9105,
								9108
							],
							[
								9113,
								9116
							],
							[
								9122,
								9125
							],
							[
								9131,
								9135
							],
							[
								9143,
								9146
							],
							[
								9151,
								9155
							],
							[
								9161,
								9164
							],
							[
								9170,
								9173
							],
							[
								9179,
								9182
							],
							[
								9188,
								9191
							],
							[
								9197,
								9201
							],
							[
								9206,
								9209
							],
							[
								9225,
								9228
							],
							[
								9234,
								9237
							],
							[
								9242,
								9245
							],
							[
								9251,
								9255
							],
							[
								9261,
								9264
							],
							[
								9270,
								9274
							],
							[
								9280,
								9283
							],
							[
								9289,
								9292
							],
							[
								9300,
								9303
							],
							[
								9308,
								9312
							],
							[
								9317,
								9320
							],
							[
								9326,
								9329
							],
							[
								9335,
								9338
							],
							[
								9344,
								9347
							],
							[
								9421,
								9432
							],
							[
								9502,
								9505
							],
							[
								9510,
								9514
							],
							[
								9519,
								9523
							],
							[
								9529,
								9533
							],
							[
								9541,
								9544
							],
							[
								9549,
								9552
							],
							[
								9557,
								9562
							],
							[
								9567,
								9570
							],
							[
								9576,
								9579
							],
							[
								9585,
								9588
							],
							[
								9594,
								9597
							],
							[
								9602,
								9605
							],
							[
								9612,
								9616
							],
							[
								9622,
								9626
							],
							[
								9632,
								9638
							],
							[
								9644,
								9647
							],
							[
								9653,
								9656
							],
							[
								9661,
								9664
							],
							[
								9669,
								9672
							],
							[
								9677,
								9682
							],
							[
								9691,
								9694
							],
							[
								9699,
								9702
							],
							[
								9707,
								9711
							],
							[
								9717,
								9722
							],
							[
								9728,
								9731
							],
							[
								9737,
								9740
							],
							[
								9745,
								9748
							],
							[
								9753,
								9756
							],
							[
								9761,
								9764
							],
							[
								9771,
								9774
							],
							[
								9780,
								9783
							],
							[
								9789,
								9793
							],
							[
								9798,
								9801
							],
							[
								9806,
								9809
							],
							[
								9815,
								9818
							],
							[
								9823,
								9827
							],
							[
								9833,
								9836
							],
							[
								9843,
								9846
							],
							[
								9851,
								9856
							],
							[
								9921,
								9924
							],
							[
								9930,
								9933
							],
							[
								9939,
								9944
							],
							[
								9949,
								9952
							],
							[
								9957,
								9960
							],
							[
								9966,
								9969
							],
							[
								9975,
								9978
							],
							[
								9984,
								9987
							],
							[
								9995,
								9998
							],
							[
								10003,
								10006
							],
							[
								10011,
								10014
							],
							[
								10020,
								10023
							],
							[
								10029,
								10032
							],
							[
								10104,
								10107
							],
							[
								10112,
								10116
							],
							[
								10121,
								10125
							],
							[
								10131,
								10135
							],
							[
								10141,
								10144
							],
							[
								10150,
								10153
							],
							[
								10159,
								10162
							],
							[
								10169,
								10172
							],
							[
								10177,
								10180
							],
							[
								10186,
								10189
							],
							[
								10195,
								10198
							],
							[
								10204,
								10207
							],
							[
								10213,
								10217
							],
							[
								10223,
								10226
							],
							[
								10232,
								10235
							],
							[
								10242,
								10245
							],
							[
								10308,
								10311
							],
							[
								10319,
								10322
							],
							[
								10328,
								10332
							],
							[
								10338,
								10341
							],
							[
								10346,
								10349
							],
							[
								10355,
								10358
							],
							[
								10364,
								10367
							],
							[
								10373,
								10376
							],
							[
								10447,
								10450
							],
							[
								10455,
								10459
							],
							[
								10464,
								10468
							],
							[
								10474,
								10479
							],
							[
								10487,
								10491
							],
							[
								10497,
								10500
							],
							[
								10505,
								10508
							],
							[
								10513,
								10516
							],
							[
								10521,
								10525
							],
							[
								10530,
								10533
							],
							[
								10539,
								10542
							],
							[
								10547,
								10551
							],
							[
								10559,
								10564
							],
							[
								10570,
								10573
							],
							[
								10579,
								10582
							],
							[
								10587,
								10590
							],
							[
								10595,
								10598
							],
							[
								10603,
								10607
							],
							[
								10613,
								10617
							],
							[
								10623,
								10626
							],
							[
								10632,
								10635
							],
							[
								10642,
								10645
							],
							[
								10651,
								10654
							],
							[
								10660,
								10663
							],
							[
								10737,
								10743
							],
							[
								10813,
								10816
							],
							[
								10821,
								10825
							],
							[
								10830,
								10834
							],
							[
								10840,
								10845
							],
							[
								10851,
								10855
							],
							[
								10861,
								10864
							],
							[
								10869,
								10872
							],
							[
								10879,
								10882
							],
							[
								10887,
								10891
							],
							[
								10896,
								10899
							],
							[
								10905,
								10908
							],
							[
								10913,
								10917
							],
							[
								10923,
								10928
							],
							[
								10934,
								10938
							],
							[
								10944,
								10948
							],
							[
								10956,
								10959
							],
							[
								10965,
								10968
							],
							[
								10974,
								10979
							],
							[
								10985,
								10989
							],
							[
								10994,
								10998
							],
							[
								11004,
								11009
							],
							[
								11015,
								11019
							],
							[
								11025,
								11028
							],
							[
								11093,
								11096
							],
							[
								11102,
								11105
							],
							[
								11112,
								11115
							],
							[
								11120,
								11123
							],
							[
								11128,
								11131
							],
							[
								11137,
								11140
							],
							[
								11146,
								11150
							],
							[
								11156,
								11159
							],
							[
								11164,
								11167
							],
							[
								11173,
								11176
							],
							[
								11182,
								11185
							],
							[
								11193,
								11196
							],
							[
								11201,
								11204
							],
							[
								11209,
								11212
							],
							[
								11217,
								11220
							],
							[
								11225,
								11228
							],
							[
								11233,
								11236
							],
							[
								11241,
								11244
							],
							[
								11249,
								11252
							],
							[
								11258,
								11261
							],
							[
								11333,
								11336
							],
							[
								11343,
								11347
							],
							[
								11352,
								11355
							],
							[
								11361,
								11364
							],
							[
								11370,
								11373
							],
							[
								11379,
								11382
							],
							[
								11388,
								11391
							],
							[
								11397,
								11400
							],
							[
								11406,
								11409
							],
							[
								11419,
								11424
							],
							[
								11431,
								11437
							],
							[
								11444,
								11447
							],
							[
								11453,
								11457
							],
							[
								11463,
								11466
							],
							[
								11472,
								11476
							],
							[
								11482,
								11485
							],
							[
								11491,
								11494
							],
							[
								11499,
								11503
							],
							[
								11511,
								11514
							],
							[
								11520,
								11525
							],
							[
								11535,
								11540
							],
							[
								11545,
								11551
							],
							[
								11558,
								11561
							],
							[
								11566,
								11570
							],
							[
								11576,
								11579
							],
							[
								11584,
								11588
							],
							[
								11596,
								11599
							],
							[
								11609,
								11614
							],
							[
								11619,
								11625
							],
							[
								11691,
								11695
							],
							[
								11701,
								11704
							],
							[
								11709,
								11712
							],
							[
								11718,
								11722
							],
							[
								11728,
								11731
							],
							[
								11736,
								11740
							],
							[
								11745,
								11748
							],
							[
								11811,
								11818
							],
							[
								11881,
								11884
							],
							[
								11890,
								11893
							],
							[
								11899,
								11902
							],
							[
								11908,
								11911
							],
							[
								11916,
								11919
							],
							[
								11926,
								11929
							],
							[
								11934,
								11938
							],
							[
								11943,
								11947
							],
							[
								11953,
								11956
							],
							[
								11961,
								11964
							],
							[
								11970,
								11973
							],
							[
								11978,
								11981
							],
							[
								11987,
								11990
							],
							[
								11998,
								12001
							],
							[
								12007,
								12010
							],
							[
								12015,
								12019
							],
							[
								12024,
								12028
							],
							[
								12034,
								12037
							],
							[
								12043,
								12047
							],
							[
								12053,
								12056
							],
							[
								12062,
								12065
							],
							[
								12075,
								12078
							],
							[
								12086,
								12094
							],
							[
								12101,
								12104
							],
							[
								12109,
								12113
							],
							[
								12119,
								12123
							],
							[
								12129,
								12132
							],
							[
								12137,
								12140
							],
							[
								12145,
								12148
							],
							[
								12153,
								12156
							],
							[
								12163,
								12166
							],
							[
								12171,
								12174
							],
							[
								12179,
								12182
							],
							[
								12187,
								12190
							],
							[
								12195,
								12198
							],
							[
								12203,
								12206
							],
							[
								12211,
								12214
							],
							[
								12219,
								12222
							],
							[
								12227,
								12230
							],
							[
								12235,
								12238
							],
							[
								12245,
								12248
							],
							[
								12253,
								12256
							],
							[
								12261,
								12264
							],
							[
								12269,
								12272
							],
							[
								12277,
								12280
							],
							[
								12285,
								12288
							],
							[
								12293,
								12296
							],
							[
								12301,
								12304
							],
							[
								12309,
								12312
							],
							[
								12319,
								12322
							],
							[
								12327,
								12330
							],
							[
								12335,
								12338
							],
							[
								12343,
								12346
							],
							[
								12351,
								12354
							],
							[
								12359,
								12362
							],
							[
								12367,
								12370
							],
							[
								12375,
								12378
							],
							[
								12383,
								12386
							],
							[
								12391,
								12394
							],
							[
								12401,
								12404
							],
							[
								12409,
								12412
							],
							[
								12417,
								12420
							],
							[
								12425,
								12428
							],
							[
								12433,
								12436
							],
							[
								12441,
								12444
							],
							[
								12449,
								12452
							],
							[
								12457,
								12460
							],
							[
								12465,
								12468
							],
							[
								12475,
								12478
							],
							[
								12483,
								12486
							],
							[
								12491,
								12494
							],
							[
								12499,
								12502
							],
							[
								12507,
								12510
							],
							[
								12515,
								12518
							],
							[
								12523,
								12526
							],
							[
								12531,
								12534
							],
							[
								12539,
								12542
							],
							[
								12547,
								12550
							],
							[
								12557,
								12560
							],
							[
								12565,
								12568
							],
							[
								12573,
								12576
							],
							[
								12581,
								12584
							],
							[
								12589,
								12592
							],
							[
								12597,
								12600
							],
							[
								12605,
								12608
							],
							[
								12613,
								12616
							],
							[
								12621,
								12624
							],
							[
								12631,
								12634
							],
							[
								12639,
								12642
							],
							[
								12647,
								12650
							],
							[
								12655,
								12658
							],
							[
								12663,
								12666
							],
							[
								12671,
								12674
							],
							[
								12679,
								12682
							],
							[
								12687,
								12690
							],
							[
								12695,
								12698
							],
							[
								12703,
								12706
							],
							[
								12713,
								12716
							],
							[
								12721,
								12724
							],
							[
								12729,
								12732
							],
							[
								12737,
								12740
							],
							[
								12745,
								12748
							],
							[
								12753,
								12756
							],
							[
								12761,
								12764
							],
							[
								12769,
								12772
							],
							[
								12777,
								12780
							],
							[
								12787,
								12790
							],
							[
								12795,
								12798
							],
							[
								12803,
								12806
							],
							[
								12811,
								12814
							],
							[
								12819,
								12822
							],
							[
								12827,
								12830
							],
							[
								12835,
								12838
							],
							[
								12843,
								12846
							],
							[
								12851,
								12854
							],
							[
								12860,
								12863
							],
							[
								12871,
								12874
							],
							[
								12879,
								12882
							],
							[
								12888,
								12891
							],
							[
								12897,
								12900
							],
							[
								12906,
								12909
							],
							[
								12915,
								12918
							],
							[
								12923,
								12927
							],
							[
								12932,
								12935
							],
							[
								12943,
								12946
							],
							[
								12952,
								12955
							],
							[
								12960,
								12963
							],
							[
								12969,
								12972
							],
							[
								12978,
								12981
							],
							[
								12987,
								12990
							],
							[
								13011,
								13014
							],
							[
								13075,
								13078
							],
							[
								13084,
								13087
							],
							[
								13093,
								13097
							],
							[
								13105,
								13108
							],
							[
								13114,
								13117
							],
							[
								13123,
								13126
							],
							[
								13132,
								13135
							],
							[
								13141,
								13144
							],
							[
								13149,
								13152
							],
							[
								13158,
								13161
							],
							[
								13167,
								13170
							],
							[
								13178,
								13181
							],
							[
								13186,
								13189
							],
							[
								13195,
								13198
							],
							[
								13204,
								13208
							],
							[
								13214,
								13217
							],
							[
								13223,
								13226
							],
							[
								13232,
								13235
							],
							[
								13241,
								13244
							],
							[
								13250,
								13253
							],
							[
								13261,
								13264
							],
							[
								13269,
								13272
							],
							[
								13278,
								13281
							],
							[
								13287,
								13290
							],
							[
								13296,
								13302
							],
							[
								13312,
								13315
							],
							[
								13321,
								13324
							],
							[
								13330,
								13333
							],
							[
								13340,
								13344
							],
							[
								13350,
								13354
							],
							[
								13360,
								13366
							],
							[
								13373,
								13376
							],
							[
								13382,
								13386
							],
							[
								13391,
								13394
							],
							[
								13400,
								13403
							],
							[
								13408,
								13412
							],
							[
								13420,
								13423
							],
							[
								13429,
								13432
							],
							[
								13438,
								13441
							],
							[
								13447,
								13450
							],
							[
								13456,
								13459
							],
							[
								13464,
								13467
							],
							[
								13472,
								13475
							],
							[
								13481,
								13485
							],
							[
								13492,
								13495
							],
							[
								13501,
								13504
							],
							[
								13510,
								13513
							],
							[
								13518,
								13522
							],
							[
								13528,
								13531
							],
							[
								13537,
								13540
							],
							[
								13545,
								13551
							],
							[
								13556,
								13559
							],
							[
								13576,
								13579
							],
							[
								13584,
								13587
							],
							[
								13592,
								13595
							],
							[
								13601,
								13604
							],
							[
								13610,
								13613
							],
							[
								13619,
								13622
							],
							[
								13628,
								13631
							],
							[
								13637,
								13640
							],
							[
								13648,
								13651
							],
							[
								13657,
								13660
							],
							[
								13665,
								13668
							],
							[
								13674,
								13677
							],
							[
								13683,
								13687
							],
							[
								13693,
								13696
							],
							[
								13702,
								13705
							],
							[
								13711,
								13714
							],
							[
								13719,
								13722
							],
							[
								13730,
								13734
							],
							[
								13740,
								13744
							],
							[
								13750,
								13753
							],
							[
								13759,
								13762
							],
							[
								13767,
								13770
							],
							[
								13776,
								13779
							],
							[
								13785,
								13789
							],
							[
								13795,
								13798
							],
							[
								13806,
								13809
							],
							[
								13815,
								13818
							],
							[
								13887,
								13890
							],
							[
								13896,
								13899
							],
							[
								13905,
								13908
							],
							[
								13913,
								13916
							],
							[
								13922,
								13925
							],
							[
								13930,
								13934
							],
							[
								13940,
								13943
							],
							[
								13949,
								13952
							],
							[
								13960,
								13963
							],
							[
								13968,
								13972
							],
							[
								13978,
								13981
							],
							[
								13987,
								13991
							],
							[
								13997,
								14000
							],
							[
								14006,
								14009
							],
							[
								14014,
								14018
							],
							[
								14024,
								14027
							],
							[
								14032,
								14035
							],
							[
								14043,
								14046
							],
							[
								14052,
								14055
							],
							[
								14061,
								14064
							],
							[
								14127,
								14130
							],
							[
								14136,
								14139
							],
							[
								14145,
								14148
							],
							[
								14153,
								14156
							],
							[
								14162,
								14165
							],
							[
								14171,
								14175
							],
							[
								14181,
								14184
							],
							[
								14192,
								14195
							],
							[
								14201,
								14204
							],
							[
								14209,
								14213
							],
							[
								14219,
								14222
							],
							[
								14228,
								14231
							],
							[
								14237,
								14240
							],
							[
								14246,
								14249
							],
							[
								14255,
								14258
							],
							[
								14264,
								14267
							],
							[
								14275,
								14278
							],
							[
								14283,
								14286
							],
							[
								14292,
								14295
							],
							[
								14301,
								14304
							],
							[
								14310,
								14313
							],
							[
								14318,
								14322
							],
							[
								14328,
								14331
							],
							[
								14337,
								14340
							],
							[
								14348,
								14351
							],
							[
								14357,
								14361
							],
							[
								14367,
								14371
							],
							[
								14377,
								14380
							],
							[
								14386,
								14389
							],
							[
								14394,
								14397
							],
							[
								14402,
								14406
							],
							[
								14412,
								14415
							],
							[
								14421,
								14424
							],
							[
								14431,
								14434
							],
							[
								14440,
								14444
							],
							[
								14516,
								14523
							],
							[
								14586,
								14590
							],
							[
								14595,
								14598
							],
							[
								14604,
								14607
							],
							[
								14613,
								14616
							],
							[
								14622,
								14625
							],
							[
								14630,
								14633
							],
							[
								14638,
								14641
							],
							[
								14646,
								14649
							],
							[
								14654,
								14657
							],
							[
								14664,
								14667
							],
							[
								14672,
								14676
							],
							[
								14681,
								14684
							],
							[
								14690,
								14693
							],
							[
								14698,
								14701
							],
							[
								14706,
								14709
							],
							[
								14714,
								14717
							],
							[
								14723,
								14726
							],
							[
								14732,
								14735
							],
							[
								14743,
								14746
							],
							[
								14751,
								14754
							],
							[
								14760,
								14763
							],
							[
								14769,
								14772
							],
							[
								14778,
								14781
							],
							[
								14786,
								14789
							],
							[
								14794,
								14797
							],
							[
								14803,
								14806
							],
							[
								14814,
								14817
							],
							[
								14822,
								14825
							],
							[
								14830,
								14834
							],
							[
								14840,
								14844
							],
							[
								14850,
								14853
							],
							[
								14858,
								14861
							],
							[
								14866,
								14869
							],
							[
								14874,
								14877
							],
							[
								14882,
								14885
							],
							[
								14892,
								14895
							],
							[
								14900,
								14903
							],
							[
								14908,
								14911
							],
							[
								14916,
								14919
							],
							[
								14924,
								14927
							],
							[
								14932,
								14935
							],
							[
								14940,
								14943
							],
							[
								14948,
								14951
							],
							[
								14956,
								14959
							],
							[
								14964,
								14967
							],
							[
								14974,
								14977
							],
							[
								14982,
								14985
							],
							[
								14990,
								14993
							],
							[
								14998,
								15001
							],
							[
								15006,
								15009
							],
							[
								15014,
								15017
							],
							[
								15022,
								15025
							],
							[
								15030,
								15033
							],
							[
								15038,
								15041
							],
							[
								15048,
								15051
							],
							[
								15056,
								15059
							],
							[
								15064,
								15067
							],
							[
								15072,
								15075
							],
							[
								15080,
								15083
							],
							[
								15088,
								15091
							],
							[
								15096,
								15099
							],
							[
								15104,
								15107
							],
							[
								15112,
								15115
							],
							[
								15120,
								15123
							],
							[
								15130,
								15133
							],
							[
								15138,
								15141
							],
							[
								15146,
								15149
							],
							[
								15154,
								15157
							],
							[
								15162,
								15165
							],
							[
								15170,
								15173
							],
							[
								15178,
								15181
							],
							[
								15186,
								15189
							],
							[
								15194,
								15197
							],
							[
								15204,
								15207
							],
							[
								15212,
								15215
							],
							[
								15220,
								15223
							],
							[
								15228,
								15231
							],
							[
								15236,
								15239
							],
							[
								15244,
								15247
							],
							[
								15252,
								15255
							],
							[
								15260,
								15263
							],
							[
								15268,
								15271
							],
							[
								15276,
								15279
							],
							[
								15286,
								15289
							],
							[
								15294,
								15297
							],
							[
								15302,
								15305
							],
							[
								15310,
								15313
							],
							[
								15318,
								15321
							],
							[
								15326,
								15329
							],
							[
								15334,
								15337
							],
							[
								15342,
								15345
							],
							[
								15350,
								15353
							],
							[
								15360,
								15363
							],
							[
								15368,
								15371
							],
							[
								15376,
								15379
							],
							[
								15384,
								15387
							],
							[
								15392,
								15395
							],
							[
								15400,
								15403
							],
							[
								15408,
								15411
							],
							[
								15416,
								15419
							],
							[
								15424,
								15427
							],
							[
								15432,
								15435
							],
							[
								15442,
								15445
							],
							[
								15450,
								15453
							],
							[
								15458,
								15461
							],
							[
								15466,
								15469
							],
							[
								15474,
								15477
							],
							[
								15482,
								15485
							],
							[
								15490,
								15493
							],
							[
								15498,
								15501
							],
							[
								15506,
								15509
							],
							[
								15516,
								15519
							],
							[
								15524,
								15527
							],
							[
								15532,
								15535
							],
							[
								15540,
								15543
							],
							[
								15548,
								15551
							],
							[
								15556,
								15559
							],
							[
								15564,
								15567
							],
							[
								15572,
								15575
							],
							[
								15580,
								15583
							],
							[
								15588,
								15591
							],
							[
								15599,
								15602
							],
							[
								15608,
								15611
							],
							[
								15616,
								15619
							],
							[
								15625,
								15628
							],
							[
								15634,
								15637
							],
							[
								15643,
								15646
							],
							[
								15652,
								15655
							],
							[
								15660,
								15664
							],
							[
								15671,
								15674
							],
							[
								15680,
								15683
							],
							[
								15689,
								15692
							],
							[
								15697,
								15700
							],
							[
								15706,
								15709
							],
							[
								15715,
								15718
							],
							[
								15724,
								15727
							],
							[
								15750,
								15753
							],
							[
								15812,
								15815
							],
							[
								15820,
								15823
							],
							[
								15831,
								15835
							],
							[
								15841,
								15844
							],
							[
								15850,
								15853
							],
							[
								15858,
								15861
							],
							[
								15867,
								15870
							],
							[
								15875,
								15878
							],
							[
								15884,
								15887
							],
							[
								15893,
								15896
							],
							[
								15903,
								15906
							],
							[
								15912,
								15915
							],
							[
								15921,
								15924
							],
							[
								15930,
								15933
							],
							[
								15939,
								15943
							],
							[
								15948,
								15952
							],
							[
								15958,
								15962
							],
							[
								15968,
								15972
							],
							[
								15980,
								15983
							],
							[
								15989,
								15992
							],
							[
								15997,
								16000
							],
							[
								16005,
								16008
							],
							[
								16013,
								16016
							],
							[
								16022,
								16025
							],
							[
								16031,
								16034
							],
							[
								16039,
								16042
							],
							[
								16047,
								16050
							],
							[
								16058,
								16061
							],
							[
								16067,
								16070
							],
							[
								16076,
								16079
							],
							[
								16084,
								16087
							],
							[
								16093,
								16096
							],
							[
								16102,
								16105
							],
							[
								16111,
								16114
							],
							[
								16120,
								16125
							],
							[
								16131,
								16135
							],
							[
								16142,
								16146
							],
							[
								16152,
								16156
							],
							[
								16162,
								16166
							],
							[
								16172,
								16175
							],
							[
								16181,
								16184
							],
							[
								16189,
								16192
							],
							[
								16197,
								16200
							],
							[
								16205,
								16208
							],
							[
								16215,
								16219
							],
							[
								16225,
								16228
							],
							[
								16234,
								16237
							],
							[
								16243,
								16246
							],
							[
								16252,
								16255
							],
							[
								16260,
								16263
							],
							[
								16269,
								16272
							],
							[
								16278,
								16281
							],
							[
								16286,
								16289
							],
							[
								16297,
								16300
							],
							[
								16305,
								16308
							],
							[
								16313,
								16316
							],
							[
								16322,
								16326
							],
							[
								16331,
								16334
							],
							[
								16339,
								16342
							],
							[
								16348,
								16351
							],
							[
								16357,
								16360
							],
							[
								16365,
								16369
							],
							[
								16377,
								16380
							],
							[
								16385,
								16389
							],
							[
								16394,
								16397
							],
							[
								16403,
								16406
							],
							[
								16411,
								16414
							],
							[
								16419,
								16423
							],
							[
								16429,
								16432
							],
							[
								16438,
								16441
							],
							[
								16448,
								16451
							],
							[
								16456,
								16460
							],
							[
								16466,
								16469
							],
							[
								16475,
								16479
							],
							[
								16485,
								16490
							],
							[
								16496,
								16499
							],
							[
								16504,
								16507
							],
							[
								16513,
								16516
							],
							[
								16524,
								16527
							],
							[
								16533,
								16536
							],
							[
								16541,
								16545
							],
							[
								16551,
								16555
							],
							[
								16561,
								16566
							],
							[
								16572,
								16575
							],
							[
								16581,
								16584
							],
							[
								16590,
								16594
							],
							[
								16601,
								16605
							],
							[
								16611,
								16614
							],
							[
								16620,
								16623
							],
							[
								16629,
								16632
							],
							[
								16638,
								16642
							],
							[
								16647,
								16650
							],
							[
								16656,
								16659
							],
							[
								16664,
								16667
							],
							[
								16730,
								16734
							],
							[
								16740,
								16744
							],
							[
								16750,
								16754
							],
							[
								16762,
								16765
							],
							[
								16771,
								16774
							],
							[
								16779,
								16782
							],
							[
								16787,
								16790
							],
							[
								16796,
								16799
							],
							[
								16805,
								16808
							],
							[
								16813,
								16816
							],
							[
								16821,
								16825
							],
							[
								16833,
								16836
							],
							[
								16842,
								16845
							],
							[
								16850,
								16853
							],
							[
								16859,
								16862
							],
							[
								16868,
								16871
							],
							[
								16877,
								16880
							],
							[
								16885,
								16888
							],
							[
								16893,
								16896
							],
							[
								16901,
								16904
							],
							[
								16912,
								16915
							],
							[
								16921,
								16924
							],
							[
								16929,
								16932
							],
							[
								16938,
								16941
							],
							[
								16947,
								16950
							],
							[
								16955,
								16958
							],
							[
								16964,
								16967
							],
							[
								16973,
								16976
							],
							[
								16982,
								16985
							],
							[
								16993,
								16997
							],
							[
								17002,
								17005
							],
							[
								17011,
								17014
							],
							[
								17020,
								17024
							],
							[
								17030,
								17033
							],
							[
								17039,
								17042
							],
							[
								17047,
								17050
							],
							[
								17056,
								17059
							],
							[
								17067,
								17070
							],
							[
								17075,
								17078
							],
							[
								17084,
								17088
							],
							[
								17094,
								17097
							],
							[
								17104,
								17111
							],
							[
								17117,
								17121
							],
							[
								17126,
								17129
							],
							[
								17135,
								17138
							],
							[
								17144,
								17148
							],
							[
								17156,
								17159
							],
							[
								17164,
								17167
							],
							[
								17173,
								17176
							],
							[
								17182,
								17185
							],
							[
								17199,
								17202
							],
							[
								17207,
								17210
							],
							[
								17216,
								17220
							],
							[
								17228,
								17231
							],
							[
								17237,
								17240
							],
							[
								17245,
								17249
							],
							[
								17255,
								17258
							],
							[
								17264,
								17273
							],
							[
								17279,
								17283
							],
							[
								17288,
								17292
							],
							[
								17298,
								17301
							],
							[
								17309,
								17312
							],
							[
								17318,
								17321
							],
							[
								17327,
								17330
							],
							[
								17335,
								17338
							],
							[
								17344,
								17347
							],
							[
								17353,
								17356
							],
							[
								17362,
								17365
							],
							[
								17370,
								17374
							],
							[
								17380,
								17383
							],
							[
								17391,
								17396
							],
							[
								17401,
								17405
							],
							[
								17410,
								17413
							],
							[
								17419,
								17422
							],
							[
								17427,
								17430
							],
							[
								17436,
								17439
							],
							[
								17445,
								17448
							],
							[
								17453,
								17456
							],
							[
								17464,
								17467
							],
							[
								17472,
								17476
							],
							[
								17482,
								17486
							],
							[
								17558,
								17565
							],
							[
								17628,
								17631
							],
							[
								17637,
								17640
							],
							[
								17645,
								17648
							],
							[
								17654,
								17657
							],
							[
								17662,
								17665
							],
							[
								17671,
								17674
							],
							[
								17680,
								17683
							],
							[
								17688,
								17691
							],
							[
								17696,
								17699
							],
							[
								17706,
								17709
							],
							[
								17715,
								17718
							],
							[
								17724,
								17727
							],
							[
								17732,
								17735
							],
							[
								17741,
								17744
							],
							[
								17750,
								17754
							],
							[
								17759,
								17762
							],
							[
								17768,
								17771
							],
							[
								17779,
								17782
							],
							[
								17788,
								17791
							],
							[
								17797,
								17800
							],
							[
								17805,
								17808
							],
							[
								17813,
								17816
							],
							[
								17822,
								17825
							],
							[
								17830,
								17833
							],
							[
								17838,
								17841
							],
							[
								17846,
								17849
							],
							[
								17857,
								17860
							],
							[
								17866,
								17869
							],
							[
								17874,
								17877
							],
							[
								17882,
								17885
							],
							[
								17890,
								17893
							],
							[
								17898,
								17901
							],
							[
								17907,
								17910
							],
							[
								17916,
								17920
							],
							[
								17925,
								17928
							],
							[
								17935,
								17938
							],
							[
								17943,
								17946
							],
							[
								17951,
								17954
							],
							[
								17959,
								17962
							],
							[
								17967,
								17970
							],
							[
								17975,
								17978
							],
							[
								17983,
								17986
							],
							[
								17991,
								17994
							],
							[
								17999,
								18002
							],
							[
								18007,
								18010
							],
							[
								18017,
								18020
							],
							[
								18025,
								18028
							],
							[
								18033,
								18036
							],
							[
								18041,
								18044
							],
							[
								18049,
								18052
							],
							[
								18057,
								18060
							],
							[
								18065,
								18068
							],
							[
								18073,
								18076
							],
							[
								18081,
								18084
							],
							[
								18091,
								18094
							],
							[
								18099,
								18102
							],
							[
								18107,
								18110
							],
							[
								18115,
								18118
							],
							[
								18123,
								18126
							],
							[
								18131,
								18134
							],
							[
								18139,
								18142
							],
							[
								18147,
								18150
							],
							[
								18155,
								18158
							],
							[
								18163,
								18166
							],
							[
								18173,
								18176
							],
							[
								18181,
								18184
							],
							[
								18189,
								18192
							],
							[
								18197,
								18200
							],
							[
								18205,
								18208
							],
							[
								18213,
								18216
							],
							[
								18221,
								18224
							],
							[
								18229,
								18232
							],
							[
								18237,
								18240
							],
							[
								18247,
								18250
							],
							[
								18255,
								18258
							],
							[
								18263,
								18266
							],
							[
								18271,
								18274
							],
							[
								18279,
								18282
							],
							[
								18287,
								18290
							],
							[
								18295,
								18298
							],
							[
								18303,
								18306
							],
							[
								18311,
								18314
							],
							[
								18319,
								18322
							],
							[
								18329,
								18332
							],
							[
								18337,
								18340
							],
							[
								18345,
								18348
							],
							[
								18353,
								18356
							],
							[
								18361,
								18364
							],
							[
								18369,
								18372
							],
							[
								18377,
								18380
							],
							[
								18385,
								18388
							],
							[
								18393,
								18396
							],
							[
								18403,
								18406
							],
							[
								18411,
								18414
							],
							[
								18419,
								18422
							],
							[
								18427,
								18430
							],
							[
								18435,
								18438
							],
							[
								18443,
								18446
							],
							[
								18451,
								18454
							],
							[
								18459,
								18462
							],
							[
								18467,
								18470
							],
							[
								18475,
								18478
							],
							[
								18485,
								18488
							],
							[
								18493,
								18496
							],
							[
								18501,
								18504
							],
							[
								18509,
								18512
							],
							[
								18517,
								18520
							],
							[
								18525,
								18528
							],
							[
								18533,
								18536
							],
							[
								18541,
								18544
							],
							[
								18549,
								18552
							],
							[
								18559,
								18562
							],
							[
								18567,
								18570
							],
							[
								18575,
								18578
							],
							[
								18583,
								18586
							],
							[
								18591,
								18594
							],
							[
								18599,
								18602
							],
							[
								18607,
								18610
							],
							[
								18615,
								18618
							],
							[
								18623,
								18626
							],
							[
								18631,
								18634
							],
							[
								18642,
								18645
							],
							[
								18651,
								18654
							],
							[
								18659,
								18662
							],
							[
								18668,
								18671
							],
							[
								18677,
								18680
							],
							[
								18686,
								18689
							],
							[
								18695,
								18698
							],
							[
								18703,
								18707
							],
							[
								18714,
								18718
							],
							[
								18724,
								18727
							],
							[
								18733,
								18736
							],
							[
								18742,
								18745
							],
							[
								18751,
								18754
							],
							[
								18759,
								18763
							],
							[
								18773,
								18776
							],
							[
								18781,
								18784
							],
							[
								18789,
								18796
							],
							[
								18815,
								18818
							],
							[
								18879,
								18882
							],
							[
								18887,
								18890
							],
							[
								18896,
								18899
							],
							[
								18905,
								18908
							],
							[
								18913,
								18916
							],
							[
								18922,
								18925
							],
							[
								18931,
								18934
							],
							[
								18940,
								18943
							],
							[
								18949,
								18952
							],
							[
								18960,
								18964
							],
							[
								18970,
								18973
							],
							[
								18978,
								18981
							],
							[
								18987,
								18990
							],
							[
								18996,
								18999
							],
							[
								19005,
								19008
							],
							[
								19013,
								19016
							],
							[
								19022,
								19025
							],
							[
								19033,
								19036
							],
							[
								19041,
								19045
							],
							[
								19050,
								19054
							],
							[
								19060,
								19063
							],
							[
								19069,
								19072
							],
							[
								19077,
								19081
							],
							[
								19087,
								19092
							],
							[
								19098,
								19101
							],
							[
								19109,
								19112
							],
							[
								19118,
								19121
							],
							[
								19126,
								19130
							],
							[
								19135,
								19138
							],
							[
								19144,
								19149
							],
							[
								19155,
								19158
							],
							[
								19164,
								19167
							],
							[
								19172,
								19176
							],
							[
								19182,
								19185
							],
							[
								19193,
								19196
							],
							[
								19201,
								19204
							],
							[
								19210,
								19214
							],
							[
								19219,
								19223
							],
							[
								19228,
								19231
							],
							[
								19237,
								19240
							],
							[
								19246,
								19249
							],
							[
								19255,
								19258
							],
							[
								19266,
								19269
							],
							[
								19274,
								19277
							],
							[
								19282,
								19285
							],
							[
								19291,
								19294
							],
							[
								19300,
								19304
							],
							[
								19309,
								19313
							],
							[
								19319,
								19322
							],
							[
								19328,
								19331
							],
							[
								19337,
								19340
							],
							[
								19347,
								19351
							],
							[
								19357,
								19360
							],
							[
								19366,
								19369
							],
							[
								19374,
								19377
							],
							[
								19383,
								19386
							],
							[
								19392,
								19395
							],
							[
								19401,
								19404
							],
							[
								19409,
								19412
							],
							[
								19419,
								19422
							],
							[
								19428,
								19431
							],
							[
								19437,
								19440
							],
							[
								19446,
								19449
							],
							[
								19454,
								19457
							],
							[
								19463,
								19466
							],
							[
								19472,
								19476
							],
							[
								19482,
								19486
							],
							[
								19491,
								19495
							],
							[
								19502,
								19505
							],
							[
								19510,
								19513
							],
							[
								19519,
								19522
							],
							[
								19528,
								19532
							],
							[
								19537,
								19540
							],
							[
								19545,
								19548
							],
							[
								19554,
								19557
							],
							[
								19562,
								19566
							],
							[
								19574,
								19577
							],
							[
								19583,
								19587
							],
							[
								19592,
								19596
							],
							[
								19602,
								19605
							],
							[
								19611,
								19615
							],
							[
								19621,
								19625
							],
							[
								19631,
								19634
							],
							[
								19640,
								19643
							],
							[
								19659,
								19662
							],
							[
								19667,
								19670
							],
							[
								19676,
								19680
							],
							[
								19686,
								19689
							],
							[
								19694,
								19697
							],
							[
								19703,
								19706
							],
							[
								19712,
								19715
							],
							[
								19720,
								19723
							],
							[
								19731,
								19734
							],
							[
								19740,
								19743
							],
							[
								19749,
								19752
							],
							[
								19758,
								19761
							],
							[
								19766,
								19770
							],
							[
								19776,
								19779
							],
							[
								19785,
								19788
							],
							[
								19793,
								19796
							],
							[
								19802,
								19806
							],
							[
								19814,
								19817
							],
							[
								19878,
								19881
							],
							[
								19889,
								19892
							],
							[
								19898,
								19903
							],
							[
								19908,
								19911
							],
							[
								19917,
								19921
							],
							[
								19926,
								19929
							],
							[
								19935,
								19939
							],
							[
								19945,
								19949
							],
							[
								19955,
								19958
							],
							[
								19966,
								19969
							],
							[
								19983,
								19986
							],
							[
								19991,
								19995
							],
							[
								20001,
								20005
							],
							[
								20010,
								20013
							],
							[
								20018,
								20021
							],
							[
								20027,
								20030
							],
							[
								20036,
								20039
							],
							[
								20047,
								20050
							],
							[
								20056,
								20060
							],
							[
								20065,
								20068
							],
							[
								20074,
								20077
							],
							[
								20083,
								20086
							],
							[
								20091,
								20094
							],
							[
								20099,
								20102
							],
							[
								20108,
								20111
							],
							[
								20119,
								20123
							],
							[
								20128,
								20131
							],
							[
								20137,
								20140
							],
							[
								20146,
								20149
							],
							[
								20155,
								20158
							],
							[
								20164,
								20167
							],
							[
								20173,
								20177
							],
							[
								20183,
								20186
							],
							[
								20191,
								20194
							],
							[
								20202,
								20205
							],
							[
								20211,
								20214
							],
							[
								20220,
								20223
							],
							[
								20228,
								20231
							],
							[
								20237,
								20240
							],
							[
								20246,
								20249
							],
							[
								20255,
								20258
							],
							[
								20263,
								20267
							],
							[
								20275,
								20278
							],
							[
								20283,
								20286
							],
							[
								20291,
								20294
							],
							[
								20299,
								20302
							],
							[
								20308,
								20311
							],
							[
								20317,
								20320
							],
							[
								20325,
								20329
							],
							[
								20335,
								20340
							],
							[
								20346,
								20349
							],
							[
								20357,
								20360
							],
							[
								20366,
								20369
							],
							[
								20374,
								20377
							],
							[
								20382,
								20385
							],
							[
								20391,
								20394
							],
							[
								20399,
								20402
							],
							[
								20407,
								20411
							],
							[
								20417,
								20420
							],
							[
								20428,
								20431
							],
							[
								20437,
								20440
							],
							[
								20446,
								20449
							],
							[
								20455,
								20458
							],
							[
								20463,
								20466
							],
							[
								20471,
								20474
							],
							[
								20480,
								20484
							],
							[
								20490,
								20493
							],
							[
								20498,
								20502
							],
							[
								20510,
								20514
							],
							[
								20520,
								20523
							],
							[
								20528,
								20531
							],
							[
								20537,
								20540
							],
							[
								20545,
								20548
							],
							[
								20553,
								20557
							],
							[
								20563,
								20566
							],
							[
								20572,
								20576
							],
							[
								20583,
								20589
							],
							[
								20594,
								20597
							],
							[
								20603,
								20608
							],
							[
								20614,
								20617
							],
							[
								20623,
								20628
							],
							[
								20633,
								20636
							],
							[
								20642,
								20645
							],
							[
								20651,
								20654
							],
							[
								20671,
								20674
							],
							[
								20679,
								20682
							],
							[
								20687,
								20690
							],
							[
								20696,
								20700
							],
							[
								20705,
								20708
							],
							[
								20714,
								20717
							],
							[
								20722,
								20725
							],
							[
								20731,
								20734
							],
							[
								20742,
								20747
							],
							[
								20752,
								20755
							],
							[
								20760,
								20763
							],
							[
								20769,
								20772
							],
							[
								20777,
								20780
							],
							[
								20785,
								20788
							],
							[
								20794,
								20797
							],
							[
								20803,
								20807
							],
							[
								20812,
								20815
							],
							[
								20878,
								20882
							],
							[
								20888,
								20891
							],
							[
								20899,
								20902
							],
							[
								20908,
								20912
							],
							[
								20917,
								20920
							],
							[
								20925,
								20928
							],
							[
								20934,
								20937
							],
							[
								20943,
								20947
							],
							[
								20952,
								20955
							],
							[
								20960,
								20963
							],
							[
								20971,
								20974
							],
							[
								20979,
								20982
							],
							[
								20987,
								20990
							],
							[
								20996,
								20999
							],
							[
								21005,
								21008
							],
							[
								21013,
								21017
							],
							[
								21023,
								21026
							],
							[
								21032,
								21036
							],
							[
								21042,
								21045
							],
							[
								21052,
								21056
							],
							[
								21062,
								21065
							],
							[
								21071,
								21074
							],
							[
								21080,
								21083
							],
							[
								21088,
								21091
							],
							[
								21097,
								21100
							],
							[
								21106,
								21110
							],
							[
								21116,
								21120
							],
							[
								21127,
								21130
							],
							[
								21136,
								21140
							],
							[
								21145,
								21148
							],
							[
								21154,
								21157
							],
							[
								21163,
								21166
							],
							[
								21171,
								21174
							],
							[
								21180,
								21183
							],
							[
								21189,
								21192
							],
							[
								21198,
								21201
							],
							[
								21208,
								21211
							],
							[
								21216,
								21220
							],
							[
								21226,
								21229
							],
							[
								21235,
								21238
							],
							[
								21244,
								21247
							],
							[
								21253,
								21256
							],
							[
								21262,
								21265
							],
							[
								21271,
								21274
							],
							[
								21281,
								21284
							],
							[
								21290,
								21293
							],
							[
								21299,
								21302
							],
							[
								21307,
								21310
							],
							[
								21315,
								21321
							],
							[
								21326,
								21330
							],
							[
								21336,
								21341
							],
							[
								21347,
								21350
							],
							[
								21358,
								21361
							],
							[
								21464,
								21471
							],
							[
								21477,
								21480
							],
							[
								21485,
								21489
							],
							[
								21495,
								21498
							],
							[
								21504,
								21508
							],
							[
								21515,
								21518
							],
							[
								21594,
								21598
							],
							[
								21603,
								21608
							],
							[
								21613,
								21616
							],
							[
								21622,
								21625
							],
							[
								21631,
								21634
							],
							[
								21640,
								21643
							],
							[
								21648,
								21652
							],
							[
								21657,
								21660
							],
							[
								21667,
								21670
							],
							[
								21675,
								21678
							],
							[
								21683,
								21686
							],
							[
								21692,
								21695
							],
							[
								21701,
								21704
							],
							[
								21787,
								21790
							],
							[
								21795,
								21798
							],
							[
								21803,
								21806
							],
							[
								21811,
								21816
							],
							[
								21824,
								21828
							],
							[
								21833,
								21836
							],
							[
								21841,
								21844
							],
							[
								21850,
								21853
							],
							[
								21858,
								21861
							],
							[
								21867,
								21870
							],
							[
								21875,
								21878
							],
							[
								21884,
								21888
							],
							[
								21894,
								21897
							],
							[
								21904,
								21909
							],
							[
								21915,
								21919
							],
							[
								21925,
								21928
							],
							[
								21933,
								21936
							],
							[
								21942,
								21945
							],
							[
								21950,
								21953
							],
							[
								21959,
								21962
							],
							[
								21968,
								21972
							],
							[
								21980,
								21983
							],
							[
								21988,
								21991
							],
							[
								21997,
								22000
							],
							[
								22006,
								22009
							],
							[
								22014,
								22017
							],
							[
								22022,
								22026
							],
							[
								22032,
								22036
							],
							[
								22042,
								22045
							],
							[
								22051,
								22054
							],
							[
								22062,
								22065
							],
							[
								22070,
								22073
							],
							[
								22078,
								22081
							],
							[
								22086,
								22089
							],
							[
								22095,
								22098
							],
							[
								22104,
								22107
							],
							[
								22113,
								22116
							],
							[
								22122,
								22125
							],
							[
								22130,
								22133
							],
							[
								22140,
								22143
							],
							[
								22148,
								22151
							],
							[
								22156,
								22159
							],
							[
								22164,
								22167
							],
							[
								22172,
								22175
							],
							[
								22180,
								22183
							],
							[
								22188,
								22191
							],
							[
								22196,
								22199
							],
							[
								22204,
								22207
							],
							[
								22214,
								22217
							],
							[
								22222,
								22225
							],
							[
								22230,
								22233
							],
							[
								22238,
								22241
							],
							[
								22246,
								22249
							],
							[
								22254,
								22257
							],
							[
								22262,
								22265
							],
							[
								22270,
								22273
							],
							[
								22278,
								22281
							],
							[
								22286,
								22289
							],
							[
								22296,
								22299
							],
							[
								22304,
								22307
							],
							[
								22312,
								22315
							],
							[
								22320,
								22323
							],
							[
								22328,
								22331
							],
							[
								22336,
								22339
							],
							[
								22344,
								22347
							],
							[
								22352,
								22355
							],
							[
								22360,
								22363
							],
							[
								22370,
								22373
							],
							[
								22378,
								22381
							],
							[
								22386,
								22389
							],
							[
								22394,
								22397
							],
							[
								22402,
								22405
							],
							[
								22410,
								22413
							],
							[
								22418,
								22421
							],
							[
								22426,
								22429
							],
							[
								22434,
								22437
							],
							[
								22442,
								22445
							],
							[
								22530,
								22533
							],
							[
								22539,
								22542
							],
							[
								22548,
								22551
							],
							[
								22556,
								22559
							],
							[
								22565,
								22568
							],
							[
								22574,
								22577
							],
							[
								22583,
								22586
							],
							[
								22592,
								22595
							],
							[
								22602,
								22606
							],
							[
								22611,
								22614
							],
							[
								22620,
								22623
							],
							[
								22629,
								22632
							],
							[
								22637,
								22640
							],
							[
								22646,
								22649
							],
							[
								22655,
								22658
							],
							[
								22664,
								22667
							],
							[
								22673,
								22676
							],
							[
								22688,
								22691
							],
							[
								22696,
								22699
							],
							[
								22704,
								22707
							],
							[
								22712,
								22715
							],
							[
								22720,
								22723
							],
							[
								22728,
								22732
							],
							[
								22737,
								22740
							],
							[
								22746,
								22749
							],
							[
								22830,
								22836
							],
							[
								22909,
								22913
							],
							[
								22921,
								22924
							],
							[
								22929,
								22932
							],
							[
								22937,
								22940
							],
							[
								22946,
								22949
							],
							[
								22955,
								22959
							],
							[
								22964,
								22968
							],
							[
								22973,
								22976
							],
							[
								22981,
								22984
							],
							[
								22992,
								22995
							],
							[
								23000,
								23003
							],
							[
								23009,
								23012
							],
							[
								23017,
								23020
							],
							[
								23026,
								23030
							],
							[
								23093,
								23100
							],
							[
								23161,
								23164
							],
							[
								23229,
								23232
							],
							[
								23240,
								23243
							],
							[
								23249,
								23253
							],
							[
								23259,
								23262
							],
							[
								23268,
								23271
							],
							[
								23277,
								23280
							],
							[
								23286,
								23289
							],
							[
								23295,
								23298
							],
							[
								23303,
								23306
							],
							[
								23312,
								23315
							],
							[
								23323,
								23326
							],
							[
								23332,
								23335
							],
							[
								23340,
								23343
							],
							[
								23349,
								23352
							],
							[
								23358,
								23362
							],
							[
								23368,
								23371
							],
							[
								23377,
								23380
							],
							[
								23386,
								23389
							],
							[
								23397,
								23400
							],
							[
								23406,
								23409
							],
							[
								23415,
								23418
							],
							[
								23423,
								23427
							],
							[
								23433,
								23437
							],
							[
								23442,
								23446
							],
							[
								23452,
								23455
							],
							[
								23461,
								23464
							],
							[
								23470,
								23473
							],
							[
								23481,
								23484
							],
							[
								23490,
								23494
							],
							[
								23499,
								23502
							],
							[
								23507,
								23510
							],
							[
								23516,
								23520
							],
							[
								23525,
								23528
							],
							[
								23533,
								23536
							],
							[
								23542,
								23545
							],
							[
								23553,
								23556
							],
							[
								23561,
								23564
							],
							[
								23570,
								23574
							],
							[
								23580,
								23583
							],
							[
								23589,
								23592
							],
							[
								23598,
								23602
							],
							[
								23607,
								23610
							],
							[
								23615,
								23618
							],
							[
								23624,
								23628
							],
							[
								23636,
								23639
							],
							[
								23645,
								23648
							],
							[
								23654,
								23657
							],
							[
								23662,
								23666
							],
							[
								23672,
								23676
							],
							[
								23682,
								23685
							],
							[
								23690,
								23693
							],
							[
								23698,
								23703
							],
							[
								23712,
								23715
							],
							[
								23720,
								23723
							],
							[
								23728,
								23732
							],
							[
								23738,
								23743
							],
							[
								23749,
								23752
							],
							[
								23758,
								23761
							],
							[
								23766,
								23770
							],
							[
								23775,
								23778
							],
							[
								23783,
								23787
							],
							[
								23795,
								23799
							],
							[
								23805,
								23808
							],
							[
								23814,
								23817
							],
							[
								23823,
								23826
							],
							[
								23831,
								23834
							],
							[
								23839,
								23842
							],
							[
								23848,
								23851
							],
							[
								23857,
								23860
							],
							[
								23868,
								23871
							],
							[
								23877,
								23881
							],
							[
								23887,
								23890
							],
							[
								23896,
								23899
							],
							[
								23904,
								23907
							],
							[
								23913,
								23916
							],
							[
								23921,
								23924
							],
							[
								23929,
								23932
							],
							[
								23937,
								23940
							],
							[
								23948,
								23951
							],
							[
								23957,
								23961
							],
							[
								23966,
								23969
							],
							[
								23974,
								23978
							],
							[
								23984,
								23988
							],
							[
								23994,
								24000
							],
							[
								24006,
								24009
							],
							[
								24015,
								24018
							],
							[
								24025,
								24028
							],
							[
								24033,
								24036
							],
							[
								24042,
								24045
							],
							[
								24051,
								24054
							],
							[
								24060,
								24063
							],
							[
								24068,
								24071
							],
							[
								24077,
								24080
							],
							[
								24085,
								24089
							],
							[
								24159,
								24166
							],
							[
								24227,
								24230
							],
							[
								24235,
								24238
							],
							[
								24244,
								24247
							],
							[
								24253,
								24256
							],
							[
								24262,
								24265
							],
							[
								24273,
								24276
							],
							[
								24282,
								24285
							],
							[
								24291,
								24294
							],
							[
								24300,
								24304
							],
							[
								24310,
								24313
							],
							[
								24318,
								24321
							],
							[
								24327,
								24330
							],
							[
								24336,
								24339
							],
							[
								24344,
								24347
							],
							[
								24355,
								24360
							],
							[
								24366,
								24371
							],
							[
								24376,
								24379
							],
							[
								24384,
								24387
							],
							[
								24393,
								24396
							],
							[
								24402,
								24406
							],
							[
								24411,
								24414
							],
							[
								24420,
								24423
							],
							[
								24431,
								24434
							],
							[
								24440,
								24443
							],
							[
								24449,
								24452
							],
							[
								24458,
								24461
							],
							[
								24466,
								24469
							],
							[
								24475,
								24478
							],
							[
								24484,
								24487
							],
							[
								24493,
								24496
							],
							[
								24504,
								24508
							],
							[
								24513,
								24517
							],
							[
								24523,
								24526
							],
							[
								24532,
								24535
							],
							[
								24540,
								24544
							],
							[
								24549,
								24552
							],
							[
								24557,
								24560
							],
							[
								24566,
								24569
							],
							[
								24574,
								24577
							],
							[
								24585,
								24588
							],
							[
								24594,
								24597
							],
							[
								24603,
								24606
							],
							[
								24612,
								24616
							],
							[
								24622,
								24626
							],
							[
								24631,
								24634
							],
							[
								24640,
								24643
							],
							[
								24649,
								24652
							],
							[
								24660,
								24663
							],
							[
								24669,
								24672
							],
							[
								24678,
								24681
							],
							[
								24686,
								24690
							],
							[
								24695,
								24699
							],
							[
								24705,
								24708
							],
							[
								24713,
								24716
							],
							[
								24721,
								24724
							],
							[
								24730,
								24733
							],
							[
								24741,
								24745
							],
							[
								24751,
								24754
							],
							[
								24759,
								24762
							],
							[
								24768,
								24771
							],
							[
								24777,
								24780
							],
							[
								24785,
								24788
							],
							[
								24793,
								24796
							],
							[
								24802,
								24806
							],
							[
								24876,
								24883
							],
							[
								24944,
								24947
							],
							[
								24952,
								24956
							],
							[
								24962,
								24965
							],
							[
								24973,
								24976
							],
							[
								24982,
								24985
							],
							[
								24991,
								24995
							],
							[
								25001,
								25004
							],
							[
								25010,
								25013
							],
							[
								25018,
								25022
							],
							[
								25028,
								25031
							],
							[
								25037,
								25040
							],
							[
								25046,
								25049
							],
							[
								25057,
								25060
							],
							[
								25066,
								25070
							],
							[
								25076,
								25079
							],
							[
								25084,
								25087
							],
							[
								25093,
								25097
							],
							[
								25102,
								25105
							],
							[
								25111,
								25114
							],
							[
								25120,
								25124
							],
							[
								25132,
								25136
							],
							[
								25142,
								25145
							],
							[
								25151,
								25154
							],
							[
								25159,
								25162
							],
							[
								25168,
								25171
							],
							[
								25177,
								25180
							],
							[
								25186,
								25189
							],
							[
								25194,
								25197
							],
							[
								25203,
								25206
							],
							[
								25214,
								25217
							],
							[
								25223,
								25226
							],
							[
								25232,
								25237
							],
							[
								25242,
								25246
							],
							[
								25252,
								25255
							],
							[
								25261,
								25264
							],
							[
								25333,
								25340
							],
							[
								25400,
								25403
							],
							[
								25408,
								25411
							],
							[
								25416,
								25419
							],
							[
								25425,
								25429
							],
							[
								25435,
								25438
							],
							[
								25446,
								25449
							],
							[
								25454,
								25457
							],
							[
								25463,
								25466
							],
							[
								25472,
								25475
							],
							[
								25481,
								25484
							],
							[
								25490,
								25495
							],
							[
								25500,
								25503
							],
							[
								25509,
								25512
							],
							[
								25518,
								25521
							],
							[
								25529,
								25533
							],
							[
								25538,
								25541
							],
							[
								25547,
								25550
							],
							[
								25556,
								25559
							],
							[
								25565,
								25568
							],
							[
								25573,
								25577
							],
							[
								25583,
								25588
							],
							[
								25594,
								25597
							],
							[
								25605,
								25608
							],
							[
								25614,
								25617
							],
							[
								25622,
								25625
							],
							[
								25631,
								25634
							],
							[
								25640,
								25643
							],
							[
								25648,
								25651
							],
							[
								25656,
								25659
							],
							[
								25665,
								25669
							],
							[
								25677,
								25680
							],
							[
								25686,
								25689
							],
							[
								25694,
								25697
							],
							[
								25702,
								25705
							],
							[
								25711,
								25714
							],
							[
								25719,
								25722
							],
							[
								25727,
								25731
							],
							[
								25737,
								25740
							],
							[
								25746,
								25750
							],
							[
								25758,
								25761
							],
							[
								25767,
								25770
							],
							[
								25775,
								25779
							],
							[
								25784,
								25787
							],
							[
								25792,
								25795
							],
							[
								25801,
								25805
							],
							[
								25810,
								25814
							],
							[
								25820,
								25824
							],
							[
								25832,
								25836
							],
							[
								25842,
								25845
							],
							[
								25851,
								25854
							],
							[
								25859,
								25862
							],
							[
								25868,
								25871
							],
							[
								25877,
								25881
							],
							[
								25887,
								25891
							],
							[
								25897,
								25900
							],
							[
								25908,
								25911
							],
							[
								25917,
								25920
							],
							[
								25925,
								25928
							],
							[
								25933,
								25936
							],
							[
								25942,
								25945
							],
							[
								25951,
								25954
							],
							[
								25959,
								25962
							],
							[
								25968,
								25972
							],
							[
								25978,
								25982
							],
							[
								25989,
								25992
							],
							[
								25998,
								26001
							],
							[
								26007,
								26010
							],
							[
								26016,
								26019
							],
							[
								26024,
								26028
							],
							[
								26034,
								26037
							],
							[
								26043,
								26046
							],
							[
								26052,
								26055
							],
							[
								26063,
								26066
							],
							[
								26072,
								26076
							],
							[
								26081,
								26084
							],
							[
								26090,
								26093
							],
							[
								26098,
								26101
							],
							[
								26106,
								26109
							],
							[
								26114,
								26117
							],
							[
								26123,
								26126
							],
							[
								26132,
								26135
							],
							[
								26142,
								26145
							],
							[
								26151,
								26155
							],
							[
								26161,
								26164
							],
							[
								26170,
								26173
							],
							[
								26179,
								26183
							],
							[
								26196,
								26199
							],
							[
								26259,
								26266
							],
							[
								26326,
								26329
							],
							[
								26334,
								26339
							],
							[
								26344,
								26347
							],
							[
								26353,
								26356
							],
							[
								26361,
								26364
							],
							[
								26369,
								26372
							],
							[
								26378,
								26382
							],
							[
								26389,
								26392
							],
							[
								26397,
								26400
							],
							[
								26406,
								26409
							],
							[
								26415,
								26419
							],
							[
								26424,
								26428
							],
							[
								26434,
								26437
							],
							[
								26443,
								26446
							],
							[
								26452,
								26455
							],
							[
								26461,
								26464
							],
							[
								26472,
								26475
							],
							[
								26480,
								26483
							],
							[
								26489,
								26492
							],
							[
								26497,
								26500
							],
							[
								26505,
								26508
							],
							[
								26513,
								26516
							],
							[
								26522,
								26525
							],
							[
								26531,
								26534
							],
							[
								26539,
								26542
							],
							[
								26550,
								26554
							],
							[
								26560,
								26563
							],
							[
								26569,
								26572
							],
							[
								26578,
								26582
							],
							[
								26713,
								26716
							],
							[
								26721,
								26724
							],
							[
								26730,
								26733
							],
							[
								26738,
								26742
							],
							[
								26748,
								26753
							],
							[
								26758,
								26762
							],
							[
								26768,
								26771
							],
							[
								26777,
								26780
							],
							[
								26788,
								26791
							],
							[
								26797,
								26800
							],
							[
								26805,
								26808
							],
							[
								26814,
								26817
							],
							[
								26822,
								26825
							],
							[
								26831,
								26834
							],
							[
								26840,
								26843
							],
							[
								26848,
								26853
							],
							[
								26858,
								26861
							],
							[
								26954,
								26957
							],
							[
								26962,
								26965
							],
							[
								26971,
								26975
							],
							[
								26981,
								26984
							],
							[
								26990,
								26993
							],
							[
								26999,
								27002
							],
							[
								27007,
								27010
							],
							[
								27018,
								27021
							],
							[
								27027,
								27030
							],
							[
								27036,
								27039
							],
							[
								27044,
								27047
							],
							[
								27053,
								27057
							],
							[
								27063,
								27066
							],
							[
								27072,
								27075
							],
							[
								27081,
								27085
							],
							[
								27091,
								27094
							],
							[
								27102,
								27105
							],
							[
								27111,
								27114
							],
							[
								27119,
								27122
							],
							[
								27128,
								27131
							],
							[
								27137,
								27141
							],
							[
								27147,
								27150
							],
							[
								27156,
								27159
							],
							[
								27165,
								27168
							],
							[
								27176,
								27179
							],
							[
								27185,
								27188
							],
							[
								27194,
								27197
							],
							[
								27203,
								27206
							],
							[
								27211,
								27214
							],
							[
								27220,
								27223
							],
							[
								27229,
								27232
							],
							[
								27238,
								27242
							],
							[
								27248,
								27251
							],
							[
								27259,
								27262
							],
							[
								27268,
								27271
							],
							[
								27276,
								27280
							],
							[
								27286,
								27289
							],
							[
								27295,
								27298
							],
							[
								27304,
								27307
							],
							[
								27313,
								27316
							],
							[
								27322,
								27325
							],
							[
								27332,
								27335
							],
							[
								27341,
								27344
							],
							[
								27350,
								27353
							],
							[
								27359,
								27362
							],
							[
								27368,
								27371
							],
							[
								27377,
								27381
							],
							[
								27387,
								27390
							],
							[
								27395,
								27398
							],
							[
								27404,
								27407
							],
							[
								27415,
								27418
							],
							[
								28678,
								28681
							],
							[
								34482,
								34489
							],
							[
								37897,
								38128
							],
							[
								49525,
								49532
							],
							[
								52940,
								53171
							],
							[
								54631,
								54664
							],
							[
								79449,
								79489
							],
							[
								79715,
								80005
							],
							[
								94361,
								97367
							],
							[
								99101,
								100122
							],
							[
								102362,
								102454
							],
							[
								108656,
								109681
							],
							[
								110392,
								110409
							],
							[
								111403,
								111410
							],
							[
								114157,
								114356
							],
							[
								116414,
								116676
							],
							[
								124879,
								124886
							],
							[
								131774,
								131821
							],
							[
								134339,
								134934
							],
							[
								136937,
								137401
							],
							[
								137541,
								137717
							],
							[
								141555,
								141567
							],
							[
								143061,
								143716
							],
							[
								147281,
								147288
							],
							[
								151502,
								151504
							],
							[
								152085,
								152710
							],
							[
								152728,
								152730
							],
							[
								163255,
								163330
							],
							[
								166599,
								166621
							],
							[
								166703,
								167031
							],
							[
								174810,
								175181
							],
							[
								179142,
								179149
							],
							[
								181178,
								181255
							],
							[
								189269,
								189429
							],
							[
								189520,
								189643
							],
							[
								191218,
								192144
							],
							[
								193862,
								194585
							],
							[
								203785,
								203792
							],
							[
								206545,
								207341
							],
							[
								207545,
								208426
							],
							[
								214452,
								214541
							],
							[
								215151,
								215743
							],
							[
								216857,
								218265
							],
							[
								219973,
								220065
							],
							[
								241906,
								242043
							],
							[
								247760,
								247767
							],
							[
								249573,
								249650
							],
							[
								254336,
								254343
							],
							[
								254358,
								254363
							],
							[
								257532,
								257692
							],
							[
								257783,
								257906
							],
							[
								259481,
								260407
							],
							[
								262125,
								262848
							]
						],
						"settings":
						{
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								225,
								3,
								1,
								22,
								39,
								43,
								0,
								0,
								0,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "intrm_obsc.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16125758,
						"regions":
						{
						},
						"selection":
						[
							[
								16125758,
								16125758
							]
						],
						"settings":
						{
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								225,
								3,
								1,
								23,
								6,
								19,
								0,
								0,
								0,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7214040.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 131.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.MarGo-output":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "PythonLearning.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"project_amc_theatre.sublime-project"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 195.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
